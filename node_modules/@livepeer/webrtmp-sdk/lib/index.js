"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebSocketError = exports.CastSession = exports.isSupported = exports.Client = void 0;
const webrtc_1 = require("./webrtc");
const websocket_1 = require("./websocket");
class Client {
    constructor(opt = {}) {
        const { secure = true, baseUrl = 'origin.livepeer.com/webrtmp', transport = 'ws', } = opt;
        this.secure = secure;
        this.baseUrl = baseUrl;
        this.transport = transport;
    }
    cast(stream, streamKey) {
        if (!streamKey) {
            throw new Error('Invalid streamKey.');
        }
        let { transport } = this;
        if (transport === 'auto') {
            transport = isSupported() ? 'ws' : 'wrtc';
        }
        if (transport === 'ws') {
            return (0, websocket_1.default)(this.secure, this.baseUrl, stream, streamKey);
        }
        else if (transport === 'wrtc') {
            return (0, webrtc_1.default)(this.secure, this.baseUrl, stream, streamKey);
        }
        else {
            throw new Error(`Invalid transport; should be either 'ws', 'wrtc' or 'auto'.`);
        }
    }
}
exports.Client = Client;
// isSupported returns whether the default protocol works reliably in the
// current browser. Currently, the default protocol is WebSocket and is only
// supported in H.264 capable browsers. You can use the experimental `auto`
// protocol that switches to WebRTC in case H.264 is not available and ignore
// this function. WebRTC does not work reliably, do not use in production.
function isSupported() {
    const mimeType = (0, websocket_1.getMimeType)();
    const supported = mimeType.includes('h264');
    return supported;
}
exports.isSupported = isSupported;
var CastSession_1 = require("./CastSession");
Object.defineProperty(exports, "CastSession", { enumerable: true, get: function () { return CastSession_1.CastSession; } });
var websocket_2 = require("./websocket");
Object.defineProperty(exports, "WebSocketError", { enumerable: true, get: function () { return websocket_2.WebSocketError; } });
//# sourceMappingURL=index.js.map