import {
  ButtonBase,
  Ce$1,
  color,
  getShade,
  jsx$1,
  styled$1
} from "./chunk-2I4TJJKF.js";
import "./chunk-3XY4GS3E.js";
import {
  require_react
} from "./chunk-YP55OVAM.js";
import {
  __toESM
} from "./chunk-S5KM4IGW.js";

// node_modules/@web3uikit/core/dist/ButtonColored.js
var import_react = __toESM(require_react());
var coloredShades = Ce$1`
    :after {
        background-color: ${getShade("light", 90)};
    }

    :hover {
        :after {
            background-color: ${getShade("light", 70)};
        }
    }

    :active {
        :after {
            background-color: ${getShade("light", 50)};
        }
    }
`;
var coloredRed = Ce$1`
    background-color: ${color.red40};
    border-color: ${color.red40};
    color: ${color.red40};

    :focus {
        box-shadow: 0px 0px 0px 2px ${color.navy30};
    }

    svg {
        fill: ${color.red40};
    }

    ${coloredShades}
`;
var coloredGreen = Ce$1`
    background-color: ${color.mint40};
    border-color: ${color.mint40};
    color: ${color.mint40};

    :focus {
        box-shadow: 0px 0px 0px 2px ${color.navy30};
    }

    svg {
        fill: ${color.mint40};
    }

    ${coloredShades}
`;
var coloredBlue = Ce$1`
    background-color: ${color.navy40};
    border-color: ${color.navy40};
    color: ${color.navy40};

    :focus {
        box-shadow: 0px 0px 0px 2px ${color.navy30};
    }

    svg {
        fill: ${color.navy40};
    }

    ${coloredShades}
`;
var coloredYellow = Ce$1`
    background-color: ${color.yellow50};
    border-color: ${color.yellow50};
    color: ${color.yellow50};

    :focus {
        box-shadow: 0px 0px 0px 2px ${color.navy30};
    }

    svg {
        fill: ${color.yellow50};
    }

    ${coloredShades}
`;
var getColored = (color2) => {
  switch (color2) {
    case "red":
      return coloredRed;
    case "green":
      return coloredGreen;
    case "blue":
      return coloredBlue;
    case "yellow":
      return coloredYellow;
    default:
      return;
  }
};
var ButtonColoredStyled$1 = styled$1(ButtonBase)`
    :after {
        background-color: ${getShade("dark", 0)};
        content: '';
        display: block;
        height: 100%;
        left: 0;
        pointer-events: none;
        position: absolute;
        top: 0;
        transition: all 0.3s ease;
        width: 100%;
        z-index: 0;
        border-radius: 10px;
    }

    ${({
  color: color2
}) => color2 && getColored(color2)}
`;
var styles = {
  ButtonColoredStyled: ButtonColoredStyled$1
};
var {
  ButtonColoredStyled
} = styles;
var ButtonColored = ({
  color: color2,
  ...props
}) => jsx$1(ButtonColoredStyled, {
  color: color2,
  ...props
});
export {
  ButtonColored as default
};
//# sourceMappingURL=ButtonColored-7JYKMUCF.js.map
