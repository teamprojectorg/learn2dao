{
  "version": 3,
  "sources": ["../../retry/lib/retry_operation.js", "../../retry/lib/retry.js", "../../retry/index.js", "../../p-retry/index.js", "../../it-last/index.js", "../../it-pipe/index.js", "../../varint/encode.js", "../../varint/decode.js", "../../varint/length.js", "../../varint/index.js", "../../multiformats/esm/vendor/varint.js", "../../multiformats/esm/src/varint.js", "../../multiformats/esm/src/bytes.js", "../../multiformats/esm/src/hashes/digest.js", "../../multiformats/esm/vendor/base-x.js", "../../multiformats/esm/src/bases/base.js", "../../multiformats/esm/src/bases/base58.js", "../../multiformats/esm/src/bases/base32.js", "../../multiformats/esm/src/cid.js", "../../it-batch/index.js", "../../it-parallel-batch/index.js", "../../is-plain-obj/index.js", "../../merge-options/index.js", "../../multiformats/esm/src/hashes/hasher.js", "../../multiformats/esm/src/hashes/sha2-browser.js", "../../multiformats/esm/src/index.js", "../../murmurhash3js-revisited/lib/murmurHash3js.js", "../../murmurhash3js-revisited/index.js", "../../err-code/index.js", "../../@protobufjs/aspromise/index.js", "../../@protobufjs/base64/index.js", "../../@protobufjs/eventemitter/index.js", "../../@protobufjs/float/index.js", "../../@protobufjs/inquire/index.js", "../../@protobufjs/utf8/index.js", "../../@protobufjs/pool/index.js", "../../protobufjs/src/util/longbits.js", "../../protobufjs/src/util/minimal.js", "../../protobufjs/src/writer.js", "../../protobufjs/src/writer_buffer.js", "../../protobufjs/src/reader.js", "../../protobufjs/src/reader_buffer.js", "../../protobufjs/src/rpc/service.js", "../../protobufjs/src/rpc.js", "../../protobufjs/src/roots.js", "../../protobufjs/src/index-minimal.js", "../../protobufjs/minimal.js", "../../multiformats/esm/src/codecs/raw.js", "../../it-all/index.js", "../../base64-js/index.js", "../../ieee754/index.js", "../../bl/node_modules/buffer/index.js", "../../bl/BufferList.js", "../../rabin-wasm/src/rabin.js", "../../@assemblyscript/loader/index.js", "../../rabin-wasm/dist/rabin-wasm.js", "../../rabin-wasm/src/index.js", "../../multiformats/esm/src/bases/identity.js", "../../multiformats/esm/src/bases/base2.js", "../../multiformats/esm/src/bases/base8.js", "../../multiformats/esm/src/bases/base10.js", "../../multiformats/esm/src/bases/base16.js", "../../multiformats/esm/src/bases/base36.js", "../../multiformats/esm/src/bases/base64.js", "../../multiformats/esm/src/bases/base256emoji.js", "../../multiformats/esm/src/hashes/identity.js", "../../multiformats/esm/src/codecs/json.js", "../../multiformats/esm/src/basics.js", "../../uint8arrays/esm/src/util/as-uint8array.js", "../../uint8arrays/esm/src/alloc.js", "../../uint8arrays/esm/src/util/bases.js", "../../uint8arrays/esm/src/from-string.js", "../../sparse-array/index.js", "../../hamt-sharding/src/bucket.js", "../../hamt-sharding/src/consumable-buffer.js", "../../uint8arrays/esm/src/concat.js", "../../hamt-sharding/src/consumable-hash.js", "../../hamt-sharding/src/index.js", "../../browser-readablestream-to-it/index.js", "../../blob-to-it/index.js", "../../it-peekable/index.js", "../../it-map/index.js", "../../it-drain/index.js", "../../it-filter/index.js", "../../it-take/index.js", "../../throttled-queue/src/throttledQueue.ts", "../../streaming-iterables/dist/index.mjs", "../../web3.storage/src/lib.js", "../../ipfs-car/dist/esm/pack/index.js", "../../@ipld/car/esm/lib/decoder.js", "../../cborg/esm/lib/is.js", "../../cborg/esm/lib/token.js", "../../cborg/esm/lib/byte-utils.js", "../../cborg/esm/lib/bl.js", "../../cborg/esm/lib/common.js", "../../cborg/esm/lib/0uint.js", "../../cborg/esm/lib/1negint.js", "../../cborg/esm/lib/2bytes.js", "../../cborg/esm/lib/3string.js", "../../cborg/esm/lib/4array.js", "../../cborg/esm/lib/5map.js", "../../cborg/esm/lib/6tag.js", "../../cborg/esm/lib/7float.js", "../../cborg/esm/lib/jump.js", "../../cborg/esm/lib/encode.js", "../../cborg/esm/lib/decode.js", "../../@ipld/dag-cbor/esm/index.js", "../../@ipld/car/esm/lib/reader-browser.js", "../../@ipld/car/esm/lib/indexer.js", "../../@ipld/car/esm/lib/iterator.js", "../../@ipld/car/esm/lib/writer-browser.js", "../../@ipld/car/esm/lib/encoder.js", "../../@ipld/car/esm/lib/iterator-channel.js", "../../ipfs-unixfs-importer/esm/src/index.js", "../../merge-options/index.mjs", "../../ipfs-unixfs-importer/esm/src/options.js", "../../@multiformats/murmur3/esm/index.js", "../../ipfs-unixfs/esm/src/index.js", "../../ipfs-unixfs/esm/src/unixfs.js", "../../ipfs-unixfs-importer/esm/src/utils/persist.js", "../../@ipld/dag-pb/esm/src/index.js", "../../@ipld/dag-pb/esm/src/pb-decode.js", "../../@ipld/dag-pb/esm/src/pb-encode.js", "../../@ipld/dag-pb/esm/src/util.js", "../../ipfs-unixfs-importer/esm/src/dag-builder/dir.js", "../../ipfs-unixfs-importer/esm/src/dag-builder/file/index.js", "../../ipfs-unixfs-importer/esm/src/dag-builder/file/flat.js", "../../ipfs-unixfs-importer/esm/src/dag-builder/file/balanced.js", "../../ipfs-unixfs-importer/esm/src/dag-builder/file/trickle.js", "../../ipfs-unixfs-importer/esm/src/dag-builder/file/buffer-importer.js", "../../ipfs-unixfs-importer/esm/src/dag-builder/index.js", "../../ipfs-unixfs-importer/esm/src/chunker/rabin.js", "../../ipfs-unixfs-importer/esm/src/chunker/fixed-size.js", "../../ipfs-unixfs-importer/esm/src/dag-builder/validate-chunks.js", "../../ipfs-unixfs-importer/esm/src/dir.js", "../../ipfs-unixfs-importer/esm/src/dir-flat.js", "../../ipfs-unixfs-importer/esm/src/dir-sharded.js", "../../ipfs-unixfs-importer/esm/src/flat-to-shard.js", "../../ipfs-unixfs-importer/esm/src/utils/to-path-components.js", "../../ipfs-unixfs-importer/esm/src/tree-builder.js", "../../ipfs-core-utils/esm/src/files/normalise-content.js", "../../ipfs-core-utils/esm/src/files/utils.js", "../../ipfs-core-utils/esm/src/files/normalise-candidate-single.js", "../../ipfs-core-utils/esm/src/files/normalise-input-single.js", "../../ipfs-core-utils/esm/src/files/normalise-candidate-multiple.js", "../../ipfs-core-utils/esm/src/files/normalise-input-multiple.js", "../../ipfs-car/dist/esm/pack/utils/normalise-input.js", "../../ipfs-car/dist/esm/blockstore/memory.js", "../../blockstore-core/esm/src/errors.js", "../../blockstore-core/esm/src/base.js", "../../blockstore-core/esm/src/memory.js", "../../blockstore-core/esm/src/index.js", "../../ipfs-car/dist/esm/pack/constants.js", "../../@web3-storage/parse-link-header/index.js", "../../ipfs-car/dist/esm/unpack/index.js", "../../ipfs-unixfs-exporter/esm/src/index.js", "../../ipfs-unixfs-exporter/esm/src/resolvers/index.js", "../../ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/index.js", "../../ipfs-unixfs-exporter/esm/src/utils/find-cid-in-shard.js", "../../ipfs-unixfs-exporter/esm/src/utils/extract-data-from-block.js", "../../ipfs-unixfs-exporter/esm/src/utils/validate-offset-and-length.js", "../../ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/file.js", "../../ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/directory.js", "../../ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js", "../../ipfs-unixfs-exporter/esm/src/resolvers/raw.js", "../../ipfs-unixfs-exporter/esm/src/resolvers/dag-cbor.js", "../../ipfs-unixfs-exporter/esm/src/resolvers/identity.js", "../../uint8arrays/esm/src/equals.js", "../../ipfs-car/dist/esm/unpack/utils/verifying-get-only-blockstore.js", "../../multiformats/esm/src/block.js", "../../carbites/esm/lib/treewalk/splitter.js", "../../carbites/node_modules/@ipld/dag-cbor/esm/index.js", "../../files-from-path/esm/src/index.browser.js", "../../web3.storage/src/platform.web.js"],
  "sourcesContent": ["function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n", "var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n", "module.exports = require('./lib/retry');", "'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n", "'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n", "const rawPipe = (...fns) => {\n  let res\n  while (fns.length) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isIterable = obj => obj && (\n  typeof obj[Symbol.asyncIterator] === 'function' ||\n  typeof obj[Symbol.iterator] === 'function' ||\n  typeof obj.next === 'function' // Probably, right?\n)\n\nconst isDuplex = obj => obj && typeof obj.sink === 'function' && isIterable(obj.source)\n\nconst duplexPipelineFn = duplex => source => {\n  duplex.sink(source) // TODO: error on sink side is unhandled rejection - this is the same as pull streams\n  return duplex.source\n}\n\nconst pipe = (...fns) => {\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(fns[0])) {\n    const duplex = fns[0]\n    fns[0] = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(fns[0])) {\n    const source = fns[0]\n    fns[0] = () => source\n  }\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nmodule.exports = pipe\nmodule.exports.pipe = pipe\nmodule.exports.rawPipe = rawPipe\nmodule.exports.isIterable = isIterable\nmodule.exports.isDuplex = isDuplex\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "'use strict'\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nasync function * batch (source, size = 1) {\n  /** @type {T[]} */\n  let things = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n", "'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>|Iterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n", "'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n", "'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import { CID } from './cid.js';\nimport * as varint from './varint.js';\nimport * as bytes from './bytes.js';\nimport * as hasher from './hashes/hasher.js';\nimport * as digest from './hashes/digest.js';\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n};", "/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n", "module.exports = require('./lib/murmurHash3js');\n", "'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n", "import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);", "'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    for (let i = 0; i < buf.length; i++) {\n      this.append(buf[i])\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (let i = 0; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i])\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n", "/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin", "\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  baseModule.__getInt8Array = getTypedArray.bind(null, Int8Array, 0);\n  baseModule.__getInt8ArrayView = getTypedArrayView.bind(null, Int8Array, 0);\n  baseModule.__getUint8Array = getTypedArray.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ArrayView = getTypedArrayView.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ClampedArray = getTypedArray.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getUint8ClampedArrayView = getTypedArrayView.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getInt16Array = getTypedArray.bind(null, Int16Array, 1);\n  baseModule.__getInt16ArrayView = getTypedArrayView.bind(null, Int16Array, 1);\n  baseModule.__getUint16Array = getTypedArray.bind(null, Uint16Array, 1);\n  baseModule.__getUint16ArrayView = getTypedArrayView.bind(null, Uint16Array, 1);\n  baseModule.__getInt32Array = getTypedArray.bind(null, Int32Array, 2);\n  baseModule.__getInt32ArrayView = getTypedArrayView.bind(null, Int32Array, 2);\n  baseModule.__getUint32Array = getTypedArray.bind(null, Uint32Array, 2);\n  baseModule.__getUint32ArrayView = getTypedArrayView.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    baseModule.__getInt64Array = getTypedArray.bind(null, BigInt64Array, 3);\n    baseModule.__getInt64ArrayView = getTypedArrayView.bind(null, BigInt64Array, 3);\n    baseModule.__getUint64Array = getTypedArray.bind(null, BigUint64Array, 3);\n    baseModule.__getUint64ArrayView = getTypedArrayView.bind(null, BigUint64Array, 3);\n  }\n  baseModule.__getFloat32Array = getTypedArray.bind(null, Float32Array, 2);\n  baseModule.__getFloat32ArrayView = getTypedArrayView.bind(null, Float32Array, 2);\n  baseModule.__getFloat64Array = getTypedArray.bind(null, Float64Array, 3);\n  baseModule.__getFloat64ArrayView = getTypedArrayView.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setArgumentsLength = exports[\"__argumentsLength\"]\n    ? function(length) { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function() {};\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return module;\n}\n\nexports.demangle = demangle;\n", "\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n", "const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});", "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}", "import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}", "import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}", "'use strict'\n\n// @ts-ignore\nconst SparseArray = require('sparse-array')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('./consumable-hash').InfiniteHash} InfiniteHash\n * @typedef {import('../').UserBucketOptions} UserBucketOptions\n */\n\n/**\n * @template V\n * @typedef {object} BucketChild<V>\n * @property {string} key\n * @property {V} value\n * @property {InfiniteHash} hash\n */\n\n/**\n * @template B\n *\n * @typedef {object} SA<B>\n * @property {number} length\n * @property {() => B[]} compactArray\n * @property {(i: number) => B} get\n * @property {(i: number, value: B) => void} set\n * @property {<A> (fn: (acc: A, curr: B, index: number) => A, initial: A) => B} reduce\n * @property {(fn: (item: B) => boolean) => B | undefined} find\n * @property {() => number[]} bitField\n * @property {(i: number) => void} unset\n */\n\n/**\n * @template T\n *\n * @typedef {object} BucketPosition<T>\n * @property {Bucket<T>} bucket\n * @property {number} pos\n * @property {InfiniteHash} hash\n * @property {BucketChild<T>} [existingChild]\n */\n\n/**\n * @typedef {object} BucketOptions\n * @property {number} bits\n * @property {(value: Uint8Array | InfiniteHash) => InfiniteHash} hash\n */\n\n/**\n * @template T\n */\nclass Bucket {\n  /**\n   * @param {BucketOptions} options\n   * @param {Bucket<T>} [parent]\n   * @param {number} [posAtParent=0]\n   */\n  constructor (options, parent, posAtParent = 0) {\n    this._options = options\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    /** @type {SA<Bucket<T> | BucketChild<T>>} */\n    this._children = new SparseArray()\n\n    /** @type {string | null} */\n    this.key = null\n  }\n\n  /**\n   * @param {string} key\n   * @param {T} value\n   */\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  /**\n   * @param {string} key\n   */\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  leafCount () {\n    const children = this._children.compactArray()\n\n    return children.reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  /**\n   * @returns {Iterable<BucketChild<T>>}\n   */\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        yield * child.eachLeafSeries()\n      } else {\n        yield child\n      }\n    }\n\n    // this is necessary because tsc requires a @return annotation as it\n    // can't derive a return type due to the recursion, and eslint requires\n    // a return statement when there is a @return annotation\n    return []\n  }\n\n  /**\n   * @param {(value: BucketChild<T>, index: number) => T} map\n   * @param {(reduced: any) => any} reduce\n   */\n  serialize (map, reduce) {\n    /** @type {T[]} */\n    const acc = []\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, acc))\n  }\n\n  /**\n   * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n   * @param {(reduced: any) => Promise<any>} asyncReduce\n   */\n  asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  /**\n   * @param {string} key\n   * @returns {Promise<BucketChild<T> | undefined>}\n   */\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child instanceof Bucket) {\n      // should not be possible, this._findPlace should always\n      // return a location for a child, not a bucket\n      return undefined\n    }\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findPlace (key) {\n    const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue,\n      existingChild: child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n\n    if (place.existingChild && place.existingChild.key !== key) {\n      // conflict\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(place.existingChild.hash)\n      newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  /**\n   * @param {BucketPosition<T>} place\n   * @param {string} key\n   * @param {T} value\n   */\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  /**\n   * @param {number} pos\n   * @param {Bucket<T> | BucketChild<T>} object\n   */\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  /**\n   * @param {number} pos\n   */\n  _delAt (pos) {\n    if (pos === -1) {\n      throw new Error('Invalid position')\n    }\n\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (onlyChild && !(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash,\n            bucket: this._parent\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @returns {BucketChild<T> | Bucket<T> | undefined}\n   */\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\n/**\n * @param {any} o\n */\nfunction exists (o) {\n  return Boolean(o)\n}\n\n/**\n *\n * @param {*} node\n * @param {number} index\n */\nfunction mapNode (node, index) {\n  return node.key\n}\n\n/**\n * @param {*} nodes\n */\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\n/**\n * @template T\n *\n * @param {Bucket<T>} bucket\n * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n * @param {(reduced: any) => Promise<any>} asyncReduce\n */\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n  }\n\n  return asyncReduce(output)\n}\n\nmodule.exports = Bucket\n", "'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  /**\n   * @param {Uint8Array} value\n   */\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  /**\n   * @param {number} bits\n   */\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n", "import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}", "'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\n/**\n * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n */\nfunction wrapHash (hashFn) {\n  /**\n   * @param {InfiniteHash | Uint8Array} value\n   */\n  function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n\n  return hashing\n}\n\nclass InfiniteHash {\n  /**\n   *\n   * @param {Uint8Array} value\n   * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n   */\n  constructor (value, hashFn) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('can only hash Uint8Arrays')\n    }\n\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n\n    /** @type {ConsumableBuffer[]} */\n    this._buffers = []\n  }\n\n  /**\n   * @param {number} bits\n   */\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n\nmodule.exports = wrapHash\nmodule.exports.InfiniteHash = InfiniteHash\n", "'use strict'\n\nconst Bucket = require('./bucket')\nconst wrapHash = require('./consumable-hash')\n\n/**\n * @typedef {object} UserBucketOptions\n * @property {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n * @property {number} [bits=8]\n */\n\n/**\n * @param {UserBucketOptions} options\n */\nfunction createHAMT (options) {\n  if (!options || !options.hashFn) {\n    throw new Error('please define an options.hashFn')\n  }\n\n  const bucketOptions = {\n    bits: options.bits || 8,\n    hash: wrapHash(options.hashFn)\n  }\n\n  return new Bucket(bucketOptions)\n}\n\nmodule.exports = {\n  createHAMT,\n  Bucket\n}\n", "'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n", "/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    // @ts-ignore missing some properties\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n", "'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n", "'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n", "'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n", "'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n", "'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n", null, "async function* _batch(size, iterable) {\n    let dataBatch = [];\n    for await (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction* _syncBatch(size, iterable) {\n    let dataBatch = [];\n    for (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction batch(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batch(size, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _batch(size, iterable);\n    }\n    return _syncBatch(size, iterable);\n}\n\nconst TIMEOUT = Symbol('TIMEOUT');\nconst createTimer = (duration) => {\n    let timeoutId;\n    return [\n        new Promise(resolve => {\n            timeoutId = setTimeout(() => resolve(TIMEOUT), duration);\n        }),\n        () => {\n            clearTimeout(timeoutId);\n        },\n    ];\n};\n// Like `batch` but flushes early if the `timeout` is reached\n// NOTE: The strategy is to only hold onto a single item for a maximum of `timeout` ms.\nasync function* _batchWithTimeout(size, timeout, iterable) {\n    const iterator = iterable[Symbol.asyncIterator]();\n    let pendingData;\n    let batchData = [];\n    let timer;\n    let clearTimer;\n    const startTimer = () => {\n        deleteTimer();\n        [timer, clearTimer] = createTimer(timeout);\n    };\n    const deleteTimer = () => {\n        if (clearTimer) {\n            clearTimer();\n        }\n        timer = undefined;\n    };\n    pendingData = iterator.next();\n    while (true) {\n        const res = await (timer ? Promise.race([pendingData, timer]) : pendingData);\n        if (res === TIMEOUT || res.done) {\n            // Flush early (before we reach the batch size)\n            if (batchData.length) {\n                yield batchData;\n                batchData = [];\n            }\n            deleteTimer();\n            // And exit appropriately\n            if (res !== TIMEOUT) {\n                // done\n                break;\n            }\n            continue;\n        }\n        // Fetch next item early doors (before we potentially yield)\n        pendingData = iterator.next();\n        // Then handle the value\n        batchData.push(res.value);\n        if (batchData.length === 1) {\n            // Start timer once we have at least 1 item ready to go\n            startTimer();\n        }\n        if (batchData.length === size) {\n            yield batchData;\n            batchData = [];\n            deleteTimer();\n            continue;\n        }\n    }\n}\nfunction batchWithTimeout(size, timeout, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batchWithTimeout(size, timeout, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] && timeout !== Infinity) {\n        return _batchWithTimeout(size, timeout, iterable);\n    }\n    // For sync iterables or an infinite timeout, the timeout is irrelevant so just fallback to regular `batch`.\n    return batch(size, iterable);\n}\n\nfunction getIterator(iterable) {\n    if (typeof iterable.next === 'function') {\n        return iterable;\n    }\n    if (typeof iterable[Symbol.iterator] === 'function') {\n        return iterable[Symbol.iterator]();\n    }\n    if (typeof iterable[Symbol.asyncIterator] === 'function') {\n        return iterable[Symbol.asyncIterator]();\n    }\n    throw new TypeError('\"values\" does not to conform to any of the iterator or iterable protocols');\n}\n\nfunction defer() {\n    let reject;\n    let resolve;\n    const promise = new Promise((resolveFunc, rejectFunc) => {\n        resolve = resolveFunc;\n        reject = rejectFunc;\n    });\n    return {\n        promise,\n        reject,\n        resolve,\n    };\n}\n\nfunction _buffer(size, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let reading = false;\n    let ended = false;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const readDeferred = readQueue.shift();\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                readDeferred.reject(error);\n            }\n            else {\n                readDeferred.resolve({ done: false, value });\n            }\n        }\n        while (readQueue.length > 0 && ended) {\n            const { resolve } = readQueue.shift();\n            resolve({ done: true, value: undefined });\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (resultQueue.length >= size) {\n            return;\n        }\n        reading = true;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n            }\n            else {\n                resultQueue.push({ value });\n            }\n        }\n        catch (error) {\n            ended = true;\n            resultQueue.push({ error });\n        }\n        fulfillReadQueue();\n        reading = false;\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length > 0) {\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                throw error;\n            }\n            fillQueue();\n            return { done: false, value };\n        }\n        if (ended) {\n            return { done: true, value: undefined }; // stupid ts\n        }\n        const deferred = defer();\n        readQueue.push(deferred);\n        fillQueue();\n        return deferred.promise;\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction* syncBuffer(size, iterable) {\n    const valueQueue = [];\n    let e;\n    try {\n        for (const value of iterable) {\n            valueQueue.push(value);\n            if (valueQueue.length <= size) {\n                continue;\n            }\n            yield valueQueue.shift();\n        }\n    }\n    catch (error) {\n        e = error;\n    }\n    for (const value of valueQueue) {\n        yield value;\n    }\n    if (e) {\n        throw e;\n    }\n}\nfunction buffer(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => buffer(size, curriedIterable);\n    }\n    if (size === 0) {\n        return iterable;\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _buffer(size, iterable);\n    }\n    return syncBuffer(size, iterable);\n}\n\nasync function _collect(iterable) {\n    const values = [];\n    for await (const value of iterable) {\n        values.push(value);\n    }\n    return values;\n}\nfunction collect(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _collect(iterable);\n    }\n    return Array.from(iterable);\n}\n\nasync function* _concat(iterables) {\n    for await (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction* _syncConcat(iterables) {\n    for (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction concat(...iterables) {\n    const hasAnyAsync = iterables.find(itr => itr[Symbol.asyncIterator] !== undefined);\n    if (hasAnyAsync) {\n        return _concat(iterables);\n    }\n    else {\n        return _syncConcat(iterables);\n    }\n}\n\nasync function _consume(iterable) {\n    for await (const val of iterable) {\n        // do nothing\n    }\n}\nfunction consume(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _consume(iterable);\n    }\n    for (const val of iterable) {\n        // do nothing\n    }\n}\n\nasync function* _filter(filterFunc, iterable) {\n    for await (const data of iterable) {\n        if (await filterFunc(data)) {\n            yield data;\n        }\n    }\n}\nfunction filter(filterFunc, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _filter(filterFunc, curriedIterable);\n    }\n    return _filter(filterFunc, iterable);\n}\n\nasync function* flatten(iterable) {\n    for await (const maybeItr of iterable) {\n        if (maybeItr && typeof maybeItr !== 'string' && (maybeItr[Symbol.iterator] || maybeItr[Symbol.asyncIterator])) {\n            yield* flatten(maybeItr);\n        }\n        else {\n            yield maybeItr;\n        }\n    }\n}\n\nasync function* _map(func, iterable) {\n    for await (const val of iterable) {\n        yield await func(val);\n    }\n}\nfunction map(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => _map(func, curriedIterable);\n    }\n    return _map(func, iterable);\n}\n\nfunction flatMap(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => flatMap(func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(map(func, iterable)));\n}\n\nfunction _flatTransform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            if (value && value[Symbol.asyncIterator]) {\n                for await (const asyncVal of value) {\n                    resultQueue.push(asyncVal);\n                }\n            }\n            else {\n                resultQueue.push(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction flatTransform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? flatTransform(concurrency, curriedFunc, curriedIterable)\n            : flatTransform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => flatTransform(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(_flatTransform(concurrency, func, iterable)));\n}\n\nasync function onceReadable(stream) {\n    return new Promise(resolve => {\n        stream.once('readable', () => {\n            resolve();\n        });\n    });\n}\nasync function* _fromStream(stream) {\n    while (true) {\n        const data = stream.read();\n        if (data !== null) {\n            yield data;\n            continue;\n        }\n        if (stream._readableState.ended) {\n            break;\n        }\n        await onceReadable(stream);\n    }\n}\nfunction fromStream(stream) {\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n        return stream;\n    }\n    return _fromStream(stream);\n}\n\nasync function* merge(...iterables) {\n    const sources = new Set(iterables.map(getIterator));\n    while (sources.size > 0) {\n        for (const iterator of sources) {\n            const nextVal = await iterator.next();\n            if (nextVal.done) {\n                sources.delete(iterator);\n            }\n            else {\n                yield nextVal.value;\n            }\n        }\n    }\n}\n\nfunction pipeline(firstFn, ...fns) {\n    let previousFn = firstFn();\n    for (const func of fns) {\n        previousFn = func(previousFn);\n    }\n    return previousFn;\n}\n\nasync function* _parallelMap(concurrency, func, iterable) {\n    let transformError = null;\n    const wrapFunc = value => ({\n        value: func(value),\n    });\n    const stopOnError = async function* (source) {\n        for await (const value of source) {\n            if (transformError) {\n                return;\n            }\n            yield value;\n        }\n    };\n    const output = pipeline(() => iterable, buffer(1), stopOnError, map(wrapFunc), buffer(concurrency - 1));\n    const itr = getIterator(output);\n    while (true) {\n        const { value, done } = await itr.next();\n        if (done) {\n            break;\n        }\n        try {\n            const val = await value.value;\n            if (!transformError) {\n                yield val;\n            }\n        }\n        catch (error) {\n            transformError = error;\n        }\n    }\n    if (transformError) {\n        throw transformError;\n    }\n}\nfunction parallelMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => parallelMap(concurrency, curriedFunc, curriedIterable);\n    }\n    if (iterable === undefined) {\n        return curriedIterable => parallelMap(concurrency, func, curriedIterable);\n    }\n    if (concurrency === 1) {\n        return map(func, iterable);\n    }\n    return _parallelMap(concurrency, func, iterable);\n}\n\nfunction parallelFlatMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? parallelFlatMap(concurrency, curriedFunc, curriedIterable)\n            : parallelFlatMap(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => parallelFlatMap(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(parallelMap(concurrency, func, iterable)));\n}\n\nasync function* parallelMerge(...iterables) {\n    const inputs = iterables.map(getIterator);\n    const concurrentWork = new Set();\n    const values = new Map();\n    let lastError = null;\n    let errCb = null;\n    let valueCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDone = value => {\n        if (valueCb) {\n            valueCb(value);\n        }\n    };\n    const waitForQueue = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            reject(lastError);\n        }\n        if (values.size > 0) {\n            return resolve();\n        }\n        valueCb = resolve;\n        errCb = reject;\n    });\n    const queueNext = input => {\n        const nextVal = Promise.resolve(input.next()).then(async ({ done, value }) => {\n            if (!done) {\n                values.set(input, value);\n            }\n            concurrentWork.delete(nextVal);\n        });\n        concurrentWork.add(nextVal);\n        nextVal.then(notifyDone, notifyError);\n    };\n    for (const input of inputs) {\n        queueNext(input);\n    }\n    while (true) {\n        // We technically don't have to check `values.size` as the for loop should have emptied it\n        // However I haven't yet found specs verifying that behavior, only tests\n        // the guard in waitForQueue() checking for values is in place for the same reason\n        if (concurrentWork.size === 0 && values.size === 0) {\n            return;\n        }\n        await waitForQueue();\n        for (const [input, value] of values) {\n            values.delete(input);\n            yield value;\n            queueNext(input);\n        }\n    }\n}\n\nasync function _reduce(func, start, iterable) {\n    let value = start;\n    for await (const nextItem of iterable) {\n        value = await func(value, nextItem);\n    }\n    return value;\n}\nfunction reduce(func, start, iterable) {\n    if (start === undefined) {\n        return (curriedStart, curriedIterable) => curriedIterable ? _reduce(func, curriedStart, curriedIterable) : reduce(func, curriedStart);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => reduce(func, start, curriedIterable);\n    }\n    return _reduce(func, start, iterable);\n}\n\nasync function* _take(count, iterable) {\n    let taken = 0;\n    for await (const val of iterable) {\n        yield await val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction* _syncTake(count, iterable) {\n    let taken = 0;\n    for (const val of iterable) {\n        yield val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction take(count, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => take(count, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _take(count, iterable);\n    }\n    return _syncTake(count, iterable);\n}\n\nasync function* _asyncTap(func, iterable) {\n    for await (const val of iterable) {\n        await func(val);\n        yield val;\n    }\n}\nfunction tap(func, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _asyncTap(func, curriedIterable);\n    }\n    return _asyncTap(func, iterable);\n}\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\nfunction _throttle(limit, interval, iterable) {\n    if (!Number.isFinite(limit)) {\n        throw new TypeError('Expected `limit` to be a finite number');\n    }\n    if (limit <= 0) {\n        throw new TypeError('Expected `limit` to be greater than 0');\n    }\n    if (!Number.isFinite(interval)) {\n        throw new TypeError('Expected `interval` to be a finite number');\n    }\n    return (async function* __throttle() {\n        let sent = 0;\n        let time;\n        for await (const val of iterable) {\n            if (sent < limit) {\n                if (typeof time === 'undefined') {\n                    time = Date.now();\n                }\n                sent++;\n                yield val;\n                continue;\n            }\n            // Only wait if the interval hasn't already passed while we were\n            // yielding the previous values.\n            const elapsedMs = Date.now() - time;\n            const waitFor = interval - elapsedMs;\n            if (waitFor > 0) {\n                await sleep(waitFor);\n            }\n            time = Date.now();\n            sent = 1;\n            yield val;\n        }\n    })();\n}\nfunction throttle(limit, interval, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _throttle(limit, interval, curriedIterable);\n    }\n    return _throttle(limit, interval, iterable);\n}\n\nfunction addTime(a, b) {\n    let seconds = a[0] + b[0];\n    let nanoseconds = a[1] + b[1];\n    if (nanoseconds >= 1000000000) {\n        const remainder = nanoseconds % 1000000000;\n        seconds += (nanoseconds - remainder) / 1000000000;\n        nanoseconds = remainder;\n    }\n    return [seconds, nanoseconds];\n}\nasync function* _asyncTime(config, iterable) {\n    const itr = iterable[Symbol.asyncIterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = await itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction* _syncTime(config, iterable) {\n    const itr = iterable[Symbol.iterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction time(config = {}, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => time(config, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] !== undefined) {\n        return _asyncTime(config, iterable);\n    }\n    else {\n        return _syncTime(config, iterable);\n    }\n}\n\nfunction _transform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            resultQueue.push(value);\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction transform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? transform(concurrency, curriedFunc, curriedIterable)\n            : transform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => transform(concurrency, func, curriedIterable);\n    }\n    return _transform(concurrency, func, iterable);\n}\n\nasync function _writeToStream(stream, iterable) {\n    let lastError = null;\n    let errCb = null;\n    let drainCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDrain = () => {\n        if (drainCb) {\n            drainCb();\n        }\n    };\n    const cleanup = () => {\n        stream.removeListener('error', notifyError);\n        stream.removeListener('drain', notifyDrain);\n    };\n    stream.once('error', notifyError);\n    const waitForDrain = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            return reject(lastError);\n        }\n        stream.once('drain', notifyDrain);\n        drainCb = resolve;\n        errCb = reject;\n    });\n    for await (const value of iterable) {\n        if (stream.write(value) === false) {\n            await waitForDrain();\n        }\n        if (lastError) {\n            break;\n        }\n    }\n    cleanup();\n    if (lastError) {\n        throw lastError;\n    }\n}\nfunction writeToStream(stream, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _writeToStream(stream, curriedIterable);\n    }\n    return _writeToStream(stream, iterable);\n}\n\nexport { batch, batchWithTimeout, buffer, collect, concat, consume, filter, flatMap, flatTransform, flatten, fromStream, getIterator, map, merge, parallelFlatMap, parallelMap, parallelMerge, pipeline, reduce, take, tap, throttle, time, transform, writeToStream };\n", "/**\n * A client library for the https://web3.storage/ service. It provides a convenient\n * interface for working with the [Raw HTTP API](https://web3.storage/#api-docs)\n * from a web browser or [Node.js](https://nodejs.org/) and comes bundled with\n * TS for out-of-the box type inference and better IntelliSense.\n *\n * @example\n * ```js\n * import { Web3Storage, File } from 'web3.storage'\n * const client = new Web3Storage({ token: API_TOKEN })\n *\n * const cid = await client.put([new File(['hello world'], 'hello.txt', { type: 'text/plain' })])\n * ```\n * @module\n */\nimport { transform } from 'streaming-iterables'\nimport pRetry, { AbortError } from 'p-retry'\nimport { pack } from 'ipfs-car/pack'\nimport { parseLinkHeader } from '@web3-storage/parse-link-header'\nimport { unpackStream } from 'ipfs-car/unpack'\nimport { TreewalkCarSplitter } from 'carbites/treewalk'\nimport { CarReader } from '@ipld/car'\nimport { filesFromPath, getFilesFromPath } from 'files-from-path'\nimport throttledQueue from 'throttled-queue'\nimport {\n  fetch as _fetch,\n  File,\n  Blob,\n  Blockstore\n} from './platform.js'\n\nconst MAX_PUT_RETRIES = 5\nconst MAX_CONCURRENT_UPLOADS = 3\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024 * 10 // chunk to ~10MB CARs\nconst MAX_BLOCK_SIZE = 1048576\nconst MAX_CHUNK_SIZE = 104857600\n// These match what is enforced server-side\nconst RATE_LIMIT_REQUESTS = 30\nconst RATE_LIMIT_PERIOD = 10 * 1000\n\n/** @typedef { import('./lib/interface.js').API } API */\n/** @typedef { import('./lib/interface.js').Status} Status */\n/** @typedef { import('./lib/interface.js').Upload} Upload */\n/** @typedef { import('./lib/interface.js').Service } Service */\n/** @typedef { import('./lib/interface.js').Web3File} Web3File */\n/** @typedef { import('./lib/interface.js').Filelike } Filelike */\n/** @typedef { import('./lib/interface.js').CIDString} CIDString */\n/** @typedef { import('./lib/interface.js').RequestOptions} RequestOptions */\n/** @typedef { import('./lib/interface.js').PutOptions} PutOptions */\n/** @typedef { import('./lib/interface.js').PutCarOptions} PutCarOptions */\n/** @typedef { import('./lib/interface.js').ListOptions} ListOptions */\n/** @typedef { import('./lib/interface.js').RateLimiter } RateLimiter */\n/** @typedef { import('./lib/interface.js').UnixFSEntry} UnixFSEntry */\n/** @typedef { import('./lib/interface.js').Web3Response} Web3Response */\n\n/**\n * Creates a rate limiter which limits at the same rate as is enforced\n * server-side, to allow the client to avoid exceeding the requests limit and\n * being blocked for 30 seconds.\n * @returns {RateLimiter}\n */\nexport function createRateLimiter () {\n  const throttle = throttledQueue(RATE_LIMIT_REQUESTS, RATE_LIMIT_PERIOD)\n  return () => throttle(() => {})\n}\n\n/**\n * Rate limiter used by static API if no rate limiter is passed. Note that each\n * instance of the Web3Storage class gets it's own limiter if none is passed.\n * This is because rate limits are enforced per API token.\n */\nconst globalRateLimiter = createRateLimiter()\n\n/**\n * @implements Service\n */\nclass Web3Storage {\n  /**\n   * Constructs a client bound to the given `options.token` and\n   * `options.endpoint`.\n   *\n   * @example\n   * ```js\n   * import { Web3Storage } from 'web3.storage'\n   * const client = new Web3Storage({ token: API_TOKEN })\n   * ```\n   *\n    @param {Service} options\n   */\n  constructor ({\n    token,\n    endpoint = new URL('https://api.web3.storage'),\n    rateLimiter,\n    fetch = _fetch\n  }) {\n    /**\n     * Authorization token.\n     *\n     * @readonly\n     */\n    this.token = token\n    /**\n     * Service API endpoint `URL`.\n     * @readonly\n     */\n    this.endpoint = endpoint\n    /**\n     * @readonly\n     */\n    this.rateLimiter = rateLimiter || createRateLimiter()\n    /**\n     * Optional custom fetch function. Defaults to global fetch in browsers or @web-std/fetch on node.\n     * @readonly\n     */\n    this.fetch = fetch\n  }\n\n  /**\n   * @hidden\n   * @param {string} token\n   * @returns {Record<string, string>}\n   */\n  static headers (token) {\n    if (!token) throw new Error('missing token')\n    return {\n      Authorization: `Bearer ${token}`,\n      'X-Client': 'web3.storage/js'\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async put ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, files, {\n    onRootCidReady,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    maxChunkSize = DEFAULT_CHUNK_SIZE,\n    wrapWithDirectory = true,\n    name,\n    signal\n  } = {}) {\n    if (maxChunkSize >= MAX_CHUNK_SIZE || maxChunkSize < MAX_BLOCK_SIZE) {\n      throw new Error('maximum chunk size must be less than 100MiB and greater than or equal to 1MB')\n    }\n    const blockstore = new Blockstore()\n    try {\n      const { out, root } = await pack({\n        input: Array.from(files).map(toImportCandidate),\n        blockstore,\n        wrapWithDirectory,\n        maxChunkSize: MAX_BLOCK_SIZE,\n        maxChildrenPerNode: 1024\n      })\n      onRootCidReady && onRootCidReady(root.toString())\n      const car = await CarReader.fromIterable(out)\n      return await Web3Storage.putCar({ endpoint, token, rateLimiter, fetch }, car, { onStoredChunk, maxRetries, maxChunkSize, name, signal })\n    } finally {\n      await blockstore.close()\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async putCar ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, car, {\n    name,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    maxChunkSize = DEFAULT_CHUNK_SIZE,\n    decoders,\n    signal\n  } = {}) {\n    if (maxChunkSize >= MAX_CHUNK_SIZE || maxChunkSize < MAX_BLOCK_SIZE) {\n      throw new Error('maximum chunk size must be less than 100MiB and greater than or equal to 1MB')\n    }\n    const targetSize = maxChunkSize\n    const url = new URL('car', endpoint)\n    let headers = Web3Storage.headers(token)\n\n    if (name) {\n      headers = { ...headers, 'X-Name': encodeURIComponent(name) }\n    }\n\n    const roots = await car.getRoots()\n    if (roots[0] == null) {\n      throw new Error('missing root CID')\n    }\n    if (roots.length > 1) {\n      throw new Error('too many roots')\n    }\n\n    const carRoot = roots[0].toString()\n    const splitter = new TreewalkCarSplitter(car, targetSize, { decoders })\n\n    /**\n     * @param {AsyncIterable<Uint8Array>} car\n     * @returns {Promise<CIDString>}\n     */\n    const onCarChunk = async car => {\n      const carParts = []\n      for await (const part of car) {\n        carParts.push(part)\n      }\n\n      const carFile = new Blob(carParts, { type: 'application/vnd.ipld.car' })\n      const res = await pRetry(\n        async () => {\n          await rateLimiter()\n          /** @type {Response} */\n          let response\n          try {\n            response = await fetch(url.toString(), {\n              method: 'POST',\n              headers,\n              body: carFile,\n              signal\n            })\n          } catch (/** @type {any} */err) {\n            throw signal && signal.aborted ? new AbortError(err) : err\n          }\n          /* c8 ignore next 3 */\n          if (response.status === 429) {\n            throw new Error('rate limited')\n          }\n          const res = await response.json()\n          if (!response.ok) {\n            throw new Error(res.message)\n          }\n\n          if (res.cid !== carRoot) {\n            throw new Error(`root CID mismatch, expected: ${carRoot}, received: ${res.cid}`)\n          }\n          return res.cid\n        },\n        { retries: maxRetries }\n      )\n\n      onStoredChunk && onStoredChunk(carFile.size)\n      return res\n    }\n\n    const upload = transform(MAX_CONCURRENT_UPLOADS, onCarChunk)\n    for await (const _ of upload(splitter.cars())) {} // eslint-disable-line\n    return carRoot\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   * @returns {Promise<Web3Response | null>}\n   */\n  static async get ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, cid, options = {}) {\n    const url = new URL(`car/${cid}`, endpoint)\n    await rateLimiter()\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token),\n      signal: options.signal\n    })\n    /* c8 ignore next 3 */\n    if (res.status === 429) {\n      throw new Error('rate limited')\n    }\n    return toWeb3Response(res)\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  /* c8 ignore next 4 */\n  static async delete ({ endpoint, token, rateLimiter = globalRateLimiter }, cid, options = {}) {\n    console.log('Not deleting', cid, endpoint, token, rateLimiter, options)\n    throw Error('.delete not implemented yet')\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   * @returns {Promise<Status | undefined>}\n   */\n  static async status ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, cid, options = {}) {\n    const url = new URL(`status/${cid}`, endpoint)\n    await rateLimiter()\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token),\n      signal: options.signal\n    })\n    /* c8 ignore next 3 */\n    if (res.status === 429) {\n      throw new Error('rate limited')\n    }\n    if (res.status === 404) {\n      return undefined\n    }\n    if (!res.ok) {\n      throw new Error(res.statusText)\n    }\n    return res.json()\n  }\n\n  /**\n   * @param {Service} service\n   * @param {ListOptions} [opts]\n   * @returns {AsyncIterable<Upload>}\n   */\n  static async * list (service, { before = new Date().toISOString(), maxResults = Infinity, signal } = {}) {\n    /**\n     * @param {Service} service\n     * @param {{before: string, size: number}} opts\n     * @returns {Promise<Response>}\n     */\n    async function listPage ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, { before, size }) {\n      const search = new URLSearchParams({ before, size: size.toString() })\n      const url = new URL(`user/uploads?${search}`, endpoint)\n      await rateLimiter()\n      return fetch(url.toString(), {\n        method: 'GET',\n        headers: {\n          ...Web3Storage.headers(token),\n          'Access-Control-Request-Headers': 'Link'\n        },\n        signal\n      })\n    }\n    let count = 0\n    const size = maxResults > 100 ? 100 : maxResults\n    for await (const res of paginator(listPage, service, { before, size })) {\n      if (!res.ok) {\n        /* c8 ignore next 3 */\n        if (res.status === 429) {\n          throw new Error('rate limited')\n        }\n\n        /* c8 ignore next 2 */\n        const errorMessage = await res.json()\n        throw new Error(`${res.status} ${res.statusText} ${errorMessage ? '- ' + errorMessage.message : ''}`)\n      }\n      const page = await res.json()\n      for (const upload of page) {\n        if (++count > maxResults) {\n          return\n        }\n        yield upload\n      }\n    }\n  }\n\n  // Just a sugar so you don't have to pass around endpoint and token around.\n\n  /**\n   * Uploads files to web3.storage. Files are hashed in the client and uploaded as a single\n   * [Content Addressed Archive(CAR)](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md).\n   * Takes a [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob)\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * const file = new File(['hello world'], 'hello.txt', { type: 'text/plain' })\n   * const cid = await client.put([file])\n   * ```\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   */\n  put (files, options) {\n    return Web3Storage.put(this, files, options)\n  }\n\n  /**\n   * Uploads a CAR ([Content Addressed Archive](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md)) file to web3.storage.\n   * Takes a CarReader interface from @ipld/car\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * import fs from 'fs'\n   * import { Readable } from 'stream'\n   * import { CarReader, CarWriter } from '@ipld/car'\n   * import * as raw from 'multiformats/codecs/raw'\n   * import { CID } from 'multiformats/cid'\n   * import { sha256 } from 'multiformats/hashes/sha2'\n   *\n   * async function getCar() {\n   *    const bytes = new TextEncoder().encode('random meaningless bytes')\n   *    const hash = await sha256.digest(raw.encode(bytes))\n   *    const cid = CID.create(1, raw.code, hash)\n   *\n   *    // create the writer and set the header with a single root\n   *    const { writer, out } = await CarWriter.create([cid])\n   *    Readable.from(out).pipe(fs.createWriteStream('example.car'))\n\n   *    // store a new block, creates a new file entry in the CAR archive\n   *    await writer.put({ cid, bytes })\n   *    await writer.close()\n\n   *    const inStream = fs.createReadStream('example.car')\n   *    // read and parse the entire stream in one go, this will cache the contents of\n   *    // the car in memory so is not suitable for large files.\n   *    const reader = await CarReader.fromIterable(inStream)\n   *    return reader\n   * }\n   *\n   * const car = await getCar()\n   * const cid = await client.putCar(car)\n   * ```\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   */\n  putCar (car, options) {\n    return Web3Storage.putCar(this, car, options)\n  }\n\n  /**\n   * Fetch the Content Addressed Archive by its root CID.\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   */\n  get (cid, options) {\n    return Web3Storage.get(this, cid, options)\n  }\n\n  /**\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   */\n  /* c8 ignore next 3 */\n  delete (cid, options) {\n    return Web3Storage.delete(this, cid, options)\n  }\n\n  /**\n   * Fetch info on Filecoin deals and IPFS pins that a given CID is replicated in.\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   */\n  status (cid, options) {\n    return Web3Storage.status(this, cid, options)\n  }\n\n  /**\n   * Find all uploads for this account. Use a `for await...of` loop to fetch them all.\n   * @example\n   * Fetch all the uploads\n   * ```js\n   * const uploads = []\n   * for await (const item of client.list()) {\n   *    uploads.push(item)\n   * }\n   * ```\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n   * @param {ListOptions} [opts]\n   * @returns {AsyncIterable<Upload>}\n   */\n  list (opts) {\n    return Web3Storage.list(this, opts)\n  }\n}\n\n/**\n * Map a UnixFSEntry to a File with a cid property.\n *\n * @param {UnixFSEntry} entry\n * @returns {Promise<Web3File>}\n */\nasync function toWeb3File ({ content, path, cid }) {\n  const chunks = []\n  for await (const chunk of content()) {\n    chunks.push(chunk)\n  }\n  const file = new File(chunks, toFilenameWithPath(path))\n  return Object.assign(file, { cid: cid.toString() })\n}\n\n/**\n * Trim the root cid from the path if there is anyting after it.\n * bafy...ic2q/path/to/pinpie.jpg => path/to/pinpie.jpg\n *         bafy...ic2q/pinpie.jpg => pinpie.jpg\n *                    bafk...52zy => bafk...52zy\n * @param {string} unixFsPath\n * @returns {string}\n */\nfunction toFilenameWithPath (unixFsPath) {\n  const slashIndex = unixFsPath.indexOf('/')\n  return slashIndex === -1 ? unixFsPath : unixFsPath.substring(slashIndex + 1)\n}\n\n/**\n * Add car unpacking smarts to the response object,\n * @param {Response} res\n * @returns {Web3Response}\n */\nfunction toWeb3Response (res) {\n  const response = Object.assign(res, {\n    unixFsIterator: async function * () {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .unixFsIterator`)\n      }\n      /* c8 ignore next 3 */\n      if (!res.body) {\n        throw new Error('No body on response')\n      }\n      const blockstore = new Blockstore()\n      try {\n        for await (const entry of unpackStream(res.body, { blockstore })) {\n          yield entry\n        }\n      } finally {\n        await blockstore.close()\n      }\n    },\n    files: async () => {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .files`)\n      }\n      const files = []\n      // @ts-ignore we're using the enriched response here\n      for await (const entry of response.unixFsIterator()) {\n        if (entry.type === 'directory') {\n          continue\n        }\n        const file = await toWeb3File(entry)\n        files.push(file)\n      }\n      return files\n    }\n  })\n  return response\n}\n\n/**\n * Convert the passed file to an \"import candidate\" - an object suitable for\n * passing to the ipfs-unixfs-importer. Note: content is an accessor so that\n * the stream is only created when needed.\n *\n * @param {Filelike} file\n */\nfunction toImportCandidate (file) {\n  /** @type {ReadableStream} */\n  let stream\n  return {\n    path: file.name,\n    get content () {\n      stream = stream || file.stream()\n      return stream\n    }\n  }\n}\n\n/**\n * Follow Link headers on a Response, to fetch all the things.\n *\n * @param {(service: Service, opts: any) => Promise<Response>} fn\n * @param {Service} service\n * @param {{}} opts\n */\nasync function * paginator (fn, service, opts) {\n  let res = await fn(service, opts)\n  yield res\n  let link = parseLinkHeader(res.headers.get('Link') || '')\n  // @ts-ignore\n  while (link && link.next) {\n    // @ts-ignore\n    res = await fn(service, link.next)\n    yield res\n    link = parseLinkHeader(res.headers.get('Link') || '')\n  }\n}\n\nexport { Web3Storage, File, Blob, filesFromPath, getFilesFromPath }\n\n/**\n * Just to verify API compatibility.\n * TODO: convert lib to a regular class that can be type checked.\n * @type {API}\n */\nconst api = Web3Storage\nvoid api // eslint-disable-line no-void\n", "import last from 'it-last';\nimport pipe from 'it-pipe';\nimport { CarWriter } from '@ipld/car';\nimport { importer } from 'ipfs-unixfs-importer';\nimport { getNormaliser } from \"./utils/normalise-input.js\";\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\nimport { unixfsImporterOptionsDefault } from \"./constants.js\";\nexport async function pack({ input, blockstore: userBlockstore, hasher, maxChunkSize, maxChildrenPerNode, wrapWithDirectory, rawLeaves }) {\n    if (!input || (Array.isArray(input) && !input.length)) {\n        throw new Error('missing input file(s)');\n    }\n    const blockstore = userBlockstore ? userBlockstore : new MemoryBlockStore();\n    // Consume the source\n    const rootEntry = await last(pipe(getNormaliser(input), (source) => importer(source, blockstore, {\n        ...unixfsImporterOptionsDefault,\n        hasher: hasher || unixfsImporterOptionsDefault.hasher,\n        maxChunkSize: maxChunkSize || unixfsImporterOptionsDefault.maxChunkSize,\n        maxChildrenPerNode: maxChildrenPerNode || unixfsImporterOptionsDefault.maxChildrenPerNode,\n        wrapWithDirectory: wrapWithDirectory === false ? false : unixfsImporterOptionsDefault.wrapWithDirectory,\n        rawLeaves: rawLeaves == null ? unixfsImporterOptionsDefault.rawLeaves : rawLeaves\n    })));\n    if (!rootEntry || !rootEntry.cid) {\n        throw new Error('given input could not be parsed correctly');\n    }\n    const root = rootEntry.cid;\n    const { writer, out: carOut } = await CarWriter.create([root]);\n    const carOutIter = carOut[Symbol.asyncIterator]();\n    let writingPromise;\n    const writeAll = async () => {\n        for await (const block of blockstore.blocks()) {\n            // `await` will block until all bytes in `carOut` are consumed by the user\n            // so we have backpressure here\n            await writer.put(block);\n        }\n        await writer.close();\n        if (!userBlockstore) {\n            await blockstore.close();\n        }\n    };\n    const out = {\n        [Symbol.asyncIterator]() {\n            if (writingPromise != null) {\n                throw new Error('Multiple iterator not supported');\n            }\n            // don't start writing until the user starts consuming the iterator\n            writingPromise = writeAll();\n            return {\n                async next() {\n                    const result = await carOutIter.next();\n                    if (result.done) {\n                        await writingPromise; // any errors will propagate from here\n                    }\n                    return result;\n                }\n            };\n        }\n    };\n    return { root, out };\n}\n", "import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nexport async function readHeader(reader) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (block == null || Array.isArray(block) || typeof block !== 'object') {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1) {\n    if (typeof block.version === 'string') {\n      throw new Error(`Invalid CAR version: \"${ block.version }\"`);\n    }\n    throw new Error(`Invalid CAR version: ${ block.version }`);\n  }\n  if (!Array.isArray(block.roots)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (Object.keys(block).filter(p => p !== 'roots' && p !== 'version').length) {\n    throw new Error('Invalid CAR header format');\n  }\n  return block;\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nexport async function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - (reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = readHeader(reader);\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}", "const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}", "class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};", "export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}", "import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}", "const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;\nencodeArray.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;\nencodeMap.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;\nencodeTag.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    let decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}", "import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nexport function makeCborEncoders() {\n  const encoders = [];\n  encoders[Type.uint.major] = encodeUint;\n  encoders[Type.negint.major] = encodeNegint;\n  encoders[Type.bytes.major] = encodeBytes;\n  encoders[Type.string.major] = encodeString;\n  encoders[Type.array.major] = encodeArray;\n  encoders[Type.map.major] = encodeMap;\n  encoders[Type.tag.major] = encodeTag;\n  encoders[Type.float.major] = encodeFloat;\n  return encoders;\n}\nconst cborEncoders = makeCborEncoders();\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  buf.reset();\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};", "import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};", "import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);", "import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;", "import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarIndexer {\n  constructor(version, roots, iterator) {\n    this._version = version;\n    this._roots = roots;\n    this._iterator = iterator;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  [Symbol.asyncIterator]() {\n    return this._iterator;\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeIndexerComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeIndexerComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeIndexerComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  return new CarIndexer(version, roots, decoder.blocksIndex());\n}", "import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nexport class CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nexport class CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  return {\n    version,\n    roots,\n    iterator: decoder.blocks()\n  };\n}", "import { CID } from 'multiformats/cid';\nimport {\n  createEncoder,\n  createHeader\n} from './encoder.js';\nimport { create as iteratorChannel } from './iterator-channel.js';\nimport {\n  bytesReader,\n  readHeader\n} from './decoder.js';\nexport class CarWriter {\n  constructor(roots, encoder) {\n    this._encoder = encoder;\n    this._mutex = encoder.setRoots(roots);\n    this._ended = false;\n  }\n  async put(block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    const cid = CID.asCID(block.cid);\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({\n      cid,\n      bytes: block.bytes\n    }));\n    return this._mutex;\n  }\n  async close() {\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    await this._mutex;\n    this._ended = true;\n    return this._encoder.close();\n  }\n  static create(roots) {\n    roots = toRoots(roots);\n    const {encoder, iterator} = encodeWriter();\n    const writer = new CarWriter(roots, encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static createAppender() {\n    const {encoder, iterator} = encodeWriter();\n    encoder.setRoots = () => Promise.resolve();\n    const writer = new CarWriter([], encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static async updateRootsInBytes(bytes, roots) {\n    const reader = bytesReader(bytes);\n    await readHeader(reader);\n    const newHeader = createHeader(roots);\n    if (reader.pos !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${ reader.pos } bytes, new header is ${ newHeader.length } bytes)`);\n    }\n    bytes.set(newHeader, 0);\n    return bytes;\n  }\n}\nexport class CarWriterOut {\n  constructor(iterator) {\n    this._iterator = iterator;\n  }\n  [Symbol.asyncIterator]() {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported');\n    }\n    this._iterating = true;\n    return this._iterator;\n  }\n}\nfunction encodeWriter() {\n  const iw = iteratorChannel();\n  const {writer, iterator} = iw;\n  const encoder = createEncoder(writer);\n  return {\n    encoder,\n    iterator\n  };\n}\nfunction toRoots(roots) {\n  if (roots === undefined) {\n    return [];\n  }\n  if (!Array.isArray(roots)) {\n    const cid = CID.asCID(roots);\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    return [cid];\n  }\n  const _roots = [];\n  for (const root of roots) {\n    const _root = CID.asCID(root);\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    _roots.push(_root);\n  }\n  return _roots;\n}\nexport const __browser = true;", "import varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  const headerBytes = dagCborEncode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      if (bytes.length) {\n        await writer.write(bytes);\n      }\n    },\n    async close() {\n      return writer.end();\n    }\n  };\n}\nexport {\n  createEncoder\n};", "function noop() {\n}\nexport function create() {\n  const chunkQueue = [];\n  let drainer = null;\n  let drainerResolver = noop;\n  let ended = false;\n  let outWait = null;\n  let outWaitResolver = noop;\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise(resolve => {\n        drainerResolver = () => {\n          drainer = null;\n          drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  const writer = {\n    write(chunk) {\n      chunkQueue.push(chunk);\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    },\n    async end() {\n      ended = true;\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    }\n  };\n  const iterator = {\n    async next() {\n      const chunk = chunkQueue.shift();\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver();\n        }\n        return {\n          done: false,\n          value: chunk\n        };\n      }\n      if (ended) {\n        drainerResolver();\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (!outWait) {\n        outWait = new Promise(resolve => {\n          outWaitResolver = () => {\n            outWait = null;\n            outWaitResolver = noop;\n            return resolve(iterator.next());\n          };\n        });\n      }\n      return outWait;\n    }\n  };\n  return {\n    writer,\n    iterator\n  };\n}", "import parallelBatch from 'it-parallel-batch';\nimport defaultOptions from './options.js';\nimport dagBuilderFn from './dag-builder/index.js';\nimport treeBuilderFn from './tree-builder.js';\nexport async function* importer(source, blockstore, options = {}) {\n  const opts = defaultOptions(options);\n  let dagBuilder;\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder;\n  } else {\n    dagBuilder = dagBuilderFn;\n  }\n  let treeBuilder;\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder;\n  } else {\n    treeBuilder = treeBuilderFn;\n  }\n  let candidates;\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}", "/**\n * Thin ESM wrapper for CJS named exports.\n *\n * Ref: https://redfin.engineering/node-modules-at-war-why-commonjs-and-es-modules-cant-get-along-9617135eeca1\n */\n\nimport mergeOptions from './index.js';\nexport default mergeOptions;\n", "import mergeOptions from 'merge-options';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { murmur3128 } from '@multiformats/murmur3';\nasync function hamtHashFn(buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n}\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file',\n  cidVersion: 0,\n  progress: () => () => {\n  },\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  polynomial: 17437180132763652,\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 34,\n  hamtBucketBits: 8\n};\nexport default (options = {}) => {\n  const defaults = mergeOptions.bind({ ignoreUndefined: true });\n  return defaults(defaultOptions, options);\n};", "import { from } from 'multiformats/hashes/hasher';\nimport { bytes } from 'multiformats';\nimport mur from 'murmurhash3js-revisited';\nfunction fromNumberTo32BitBuf(number) {\n  const bytes = new Array(4);\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 255;\n    number = number >> 8;\n  }\n  return new Uint8Array(bytes);\n}\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 35,\n  encode: input => fromNumberTo32BitBuf(mur.x86.hash32(input))\n});\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 34,\n  encode: input => bytes.fromHex(mur.x64.hash128(input))\n});", "import errcode from 'err-code';\nimport * as Pb from './unixfs.js';\nconst PBData = Pb.Data;\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n];\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'number') {\n    return mode & 4095;\n  }\n  mode = mode.toString();\n  if (mode.substring(0, 1) === '0') {\n    return parseInt(mode, 8) & 4095;\n  }\n  return parseInt(mode, 10) & 4095;\n}\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}\nclass UnixFS {\n  static unmarshal(marshaled) {\n    const message = PBData.decode(marshaled);\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    });\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime ? {\n        secs: decoded.mtime.Seconds,\n        nsecs: decoded.mtime.FractionalNanoseconds\n      } : undefined\n    });\n    data._originalMode = decoded.mode || 0;\n    return data;\n  }\n  constructor(options = { type: 'file' }) {\n    const {type, data, blockSizes, hashType, fanout, mtime, mode} = options;\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    this.type = type || 'file';\n    this.data = data;\n    this.hashType = hashType;\n    this.fanout = fanout;\n    this.blockSizes = blockSizes || [];\n    this._originalMode = 0;\n    this.mode = parseMode(mode);\n    if (mtime) {\n      this.mtime = parseMtime(mtime);\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0;\n      }\n    }\n  }\n  set mode(mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n    const parsedMode = parseMode(mode);\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode;\n    }\n  }\n  get mode() {\n    return this._mode;\n  }\n  isDirectory() {\n    return Boolean(this.type && dirTypes.includes(this.type));\n  }\n  addBlockSize(size) {\n    this.blockSizes.push(size);\n  }\n  removeBlockSize(index) {\n    this.blockSizes.splice(index, 1);\n  }\n  fileSize() {\n    if (this.isDirectory()) {\n      return 0;\n    }\n    let sum = 0;\n    this.blockSizes.forEach(size => {\n      sum += size;\n    });\n    if (this.data) {\n      sum += this.data.length;\n    }\n    return sum;\n  }\n  marshal() {\n    let type;\n    switch (this.type) {\n    case 'raw':\n      type = PBData.DataType.Raw;\n      break;\n    case 'directory':\n      type = PBData.DataType.Directory;\n      break;\n    case 'file':\n      type = PBData.DataType.File;\n      break;\n    case 'metadata':\n      type = PBData.DataType.Metadata;\n      break;\n    case 'symlink':\n      type = PBData.DataType.Symlink;\n      break;\n    case 'hamt-sharded-directory':\n      type = PBData.DataType.HAMTShard;\n      break;\n    default:\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    let data = this.data;\n    if (!this.data || !this.data.length) {\n      data = undefined;\n    }\n    let mode;\n    if (this.mode != null) {\n      mode = this._originalMode & 4294963200 | (parseMode(this.mode) || 0);\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined;\n      }\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined;\n      }\n    }\n    let mtime;\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime);\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        };\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds;\n        }\n      }\n    }\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    };\n    return PBData.encode(pbData).finish();\n  }\n}\nexport {\n  UnixFS\n};", "import $protobuf from 'protobufjs/minimal.js';\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\nconst $root = $protobuf.roots['ipfs-unixfs'] || ($protobuf.roots['ipfs-unixfs'] = {});\nexport const Data = $root.Data = (() => {\n  function Data(p) {\n    this.blocksizes = [];\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Data.prototype.Type = 0;\n  Data.prototype.Data = $util.newBuffer([]);\n  Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.blocksizes = $util.emptyArray;\n  Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.mode = 0;\n  Data.prototype.mtime = null;\n  Data.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int32(m.Type);\n    if (m.Data != null && Object.hasOwnProperty.call(m, 'Data'))\n      w.uint32(18).bytes(m.Data);\n    if (m.filesize != null && Object.hasOwnProperty.call(m, 'filesize'))\n      w.uint32(24).uint64(m.filesize);\n    if (m.blocksizes != null && m.blocksizes.length) {\n      for (var i = 0; i < m.blocksizes.length; ++i)\n        w.uint32(32).uint64(m.blocksizes[i]);\n    }\n    if (m.hashType != null && Object.hasOwnProperty.call(m, 'hashType'))\n      w.uint32(40).uint64(m.hashType);\n    if (m.fanout != null && Object.hasOwnProperty.call(m, 'fanout'))\n      w.uint32(48).uint64(m.fanout);\n    if (m.mode != null && Object.hasOwnProperty.call(m, 'mode'))\n      w.uint32(56).uint32(m.mode);\n    if (m.mtime != null && Object.hasOwnProperty.call(m, 'mtime'))\n      $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n    return w;\n  };\n  Data.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Type = r.int32();\n        break;\n      case 2:\n        m.Data = r.bytes();\n        break;\n      case 3:\n        m.filesize = r.uint64();\n        break;\n      case 4:\n        if (!(m.blocksizes && m.blocksizes.length))\n          m.blocksizes = [];\n        if ((t & 7) === 2) {\n          var c2 = r.uint32() + r.pos;\n          while (r.pos < c2)\n            m.blocksizes.push(r.uint64());\n        } else\n          m.blocksizes.push(r.uint64());\n        break;\n      case 5:\n        m.hashType = r.uint64();\n        break;\n      case 6:\n        m.fanout = r.uint64();\n        break;\n      case 7:\n        m.mode = r.uint32();\n        break;\n      case 8:\n        m.mtime = $root.UnixTime.decode(r, r.uint32());\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Type'))\n      throw $util.ProtocolError('missing required \\'Type\\'', { instance: m });\n    return m;\n  };\n  Data.fromObject = function fromObject(d) {\n    if (d instanceof $root.Data)\n      return d;\n    var m = new $root.Data();\n    switch (d.Type) {\n    case 'Raw':\n    case 0:\n      m.Type = 0;\n      break;\n    case 'Directory':\n    case 1:\n      m.Type = 1;\n      break;\n    case 'File':\n    case 2:\n      m.Type = 2;\n      break;\n    case 'Metadata':\n    case 3:\n      m.Type = 3;\n      break;\n    case 'Symlink':\n    case 4:\n      m.Type = 4;\n      break;\n    case 'HAMTShard':\n    case 5:\n      m.Type = 5;\n      break;\n    }\n    if (d.Data != null) {\n      if (typeof d.Data === 'string')\n        $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n      else if (d.Data.length)\n        m.Data = d.Data;\n    }\n    if (d.filesize != null) {\n      if ($util.Long)\n        (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n      else if (typeof d.filesize === 'string')\n        m.filesize = parseInt(d.filesize, 10);\n      else if (typeof d.filesize === 'number')\n        m.filesize = d.filesize;\n      else if (typeof d.filesize === 'object')\n        m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n    }\n    if (d.blocksizes) {\n      if (!Array.isArray(d.blocksizes))\n        throw TypeError('.Data.blocksizes: array expected');\n      m.blocksizes = [];\n      for (var i = 0; i < d.blocksizes.length; ++i) {\n        if ($util.Long)\n          (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n        else if (typeof d.blocksizes[i] === 'string')\n          m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n        else if (typeof d.blocksizes[i] === 'number')\n          m.blocksizes[i] = d.blocksizes[i];\n        else if (typeof d.blocksizes[i] === 'object')\n          m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n      }\n    }\n    if (d.hashType != null) {\n      if ($util.Long)\n        (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n      else if (typeof d.hashType === 'string')\n        m.hashType = parseInt(d.hashType, 10);\n      else if (typeof d.hashType === 'number')\n        m.hashType = d.hashType;\n      else if (typeof d.hashType === 'object')\n        m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n    }\n    if (d.fanout != null) {\n      if ($util.Long)\n        (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n      else if (typeof d.fanout === 'string')\n        m.fanout = parseInt(d.fanout, 10);\n      else if (typeof d.fanout === 'number')\n        m.fanout = d.fanout;\n      else if (typeof d.fanout === 'object')\n        m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n    }\n    if (d.mode != null) {\n      m.mode = d.mode >>> 0;\n    }\n    if (d.mtime != null) {\n      if (typeof d.mtime !== 'object')\n        throw TypeError('.Data.mtime: object expected');\n      m.mtime = $root.UnixTime.fromObject(d.mtime);\n    }\n    return m;\n  };\n  Data.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.arrays || o.defaults) {\n      d.blocksizes = [];\n    }\n    if (o.defaults) {\n      d.Type = o.enums === String ? 'Raw' : 0;\n      if (o.bytes === String)\n        d.Data = '';\n      else {\n        d.Data = [];\n        if (o.bytes !== Array)\n          d.Data = $util.newBuffer(d.Data);\n      }\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.filesize = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.hashType = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.fanout = o.longs === String ? '0' : 0;\n      d.mode = 0;\n      d.mtime = null;\n    }\n    if (m.Type != null && m.hasOwnProperty('Type')) {\n      d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n    }\n    if (m.Data != null && m.hasOwnProperty('Data')) {\n      d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n    }\n    if (m.filesize != null && m.hasOwnProperty('filesize')) {\n      if (typeof m.filesize === 'number')\n        d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n      else\n        d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n    }\n    if (m.blocksizes && m.blocksizes.length) {\n      d.blocksizes = [];\n      for (var j = 0; j < m.blocksizes.length; ++j) {\n        if (typeof m.blocksizes[j] === 'number')\n          d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n        else\n          d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n      }\n    }\n    if (m.hashType != null && m.hasOwnProperty('hashType')) {\n      if (typeof m.hashType === 'number')\n        d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n      else\n        d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n    }\n    if (m.fanout != null && m.hasOwnProperty('fanout')) {\n      if (typeof m.fanout === 'number')\n        d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n      else\n        d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n    }\n    if (m.mode != null && m.hasOwnProperty('mode')) {\n      d.mode = m.mode;\n    }\n    if (m.mtime != null && m.hasOwnProperty('mtime')) {\n      d.mtime = $root.UnixTime.toObject(m.mtime, o);\n    }\n    return d;\n  };\n  Data.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  Data.DataType = function () {\n    const valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = 'Raw'] = 0;\n    values[valuesById[1] = 'Directory'] = 1;\n    values[valuesById[2] = 'File'] = 2;\n    values[valuesById[3] = 'Metadata'] = 3;\n    values[valuesById[4] = 'Symlink'] = 4;\n    values[valuesById[5] = 'HAMTShard'] = 5;\n    return values;\n  }();\n  return Data;\n})();\nexport const UnixTime = $root.UnixTime = (() => {\n  function UnixTime(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  UnixTime.prototype.FractionalNanoseconds = 0;\n  UnixTime.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int64(m.Seconds);\n    if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, 'FractionalNanoseconds'))\n      w.uint32(21).fixed32(m.FractionalNanoseconds);\n    return w;\n  };\n  UnixTime.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Seconds = r.int64();\n        break;\n      case 2:\n        m.FractionalNanoseconds = r.fixed32();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Seconds'))\n      throw $util.ProtocolError('missing required \\'Seconds\\'', { instance: m });\n    return m;\n  };\n  UnixTime.fromObject = function fromObject(d) {\n    if (d instanceof $root.UnixTime)\n      return d;\n    var m = new $root.UnixTime();\n    if (d.Seconds != null) {\n      if ($util.Long)\n        (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n      else if (typeof d.Seconds === 'string')\n        m.Seconds = parseInt(d.Seconds, 10);\n      else if (typeof d.Seconds === 'number')\n        m.Seconds = d.Seconds;\n      else if (typeof d.Seconds === 'object')\n        m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n    }\n    if (d.FractionalNanoseconds != null) {\n      m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n    }\n    return m;\n  };\n  UnixTime.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, false);\n        d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.Seconds = o.longs === String ? '0' : 0;\n      d.FractionalNanoseconds = 0;\n    }\n    if (m.Seconds != null && m.hasOwnProperty('Seconds')) {\n      if (typeof m.Seconds === 'number')\n        d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n      else\n        d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n    }\n    if (m.FractionalNanoseconds != null && m.hasOwnProperty('FractionalNanoseconds')) {\n      d.FractionalNanoseconds = m.FractionalNanoseconds;\n    }\n    return d;\n  };\n  UnixTime.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return UnixTime;\n})();\nexport const Metadata = $root.Metadata = (() => {\n  function Metadata(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Metadata.prototype.MimeType = '';\n  Metadata.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    if (m.MimeType != null && Object.hasOwnProperty.call(m, 'MimeType'))\n      w.uint32(10).string(m.MimeType);\n    return w;\n  };\n  Metadata.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.MimeType = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    return m;\n  };\n  Metadata.fromObject = function fromObject(d) {\n    if (d instanceof $root.Metadata)\n      return d;\n    var m = new $root.Metadata();\n    if (d.MimeType != null) {\n      m.MimeType = String(d.MimeType);\n    }\n    return m;\n  };\n  Metadata.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      d.MimeType = '';\n    }\n    if (m.MimeType != null && m.hasOwnProperty('MimeType')) {\n      d.MimeType = m.MimeType;\n    }\n    return d;\n  };\n  Metadata.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return Metadata;\n})();\nexport {\n  $root as default\n};", "import { CID } from 'multiformats/cid';\nimport * as dagPb from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb;\n  }\n  if (!options.hasher) {\n    options.hasher = sha256;\n  }\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1;\n  }\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1;\n  }\n  const multihash = await options.hasher.digest(buffer);\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, { signal: options.signal });\n  }\n  return cid;\n};\nexport default persist;", "import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};", "const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}", "const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];", "import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}", "import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = encode(prepare({ Data: unixfs.marshal() }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\nexport default dirBuilder;", "import errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport persist from '../../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport parallelBatch from 'it-parallel-batch';\nimport * as rawCodec from 'multiformats/codecs/raw';\nimport * as dagPb from '@ipld/dag-pb';\nimport dagFlat from './flat.js';\nimport dagBalanced from './balanced.js';\nimport dagTrickle from './trickle.js';\nimport bufferImporterFn from './buffer-importer.js';\nconst dagBuilders = {\n  flat: dagFlat,\n  balanced: dagBalanced,\n  trickle: dagTrickle\n};\nasync function* buildFileBatch(file, blockstore, options) {\n  let count = -1;\n  let previous;\n  let bufferImporter;\n  if (typeof options.bufferImporter === 'function') {\n    bufferImporter = options.bufferImporter;\n  } else {\n    bufferImporter = bufferImporterFn;\n  }\n  for await (const entry of parallelBatch(bufferImporter(file, blockstore, options), options.blockWriteConcurrency)) {\n    count++;\n    if (count === 0) {\n      previous = entry;\n      continue;\n    } else if (count === 1 && previous) {\n      yield previous;\n      previous = null;\n    }\n    yield entry;\n  }\n  if (previous) {\n    previous.single = true;\n    yield previous;\n  }\n}\nconst reduce = (file, blockstore, options) => {\n  async function reducer(leaves) {\n    if (leaves.length === 1 && leaves[0].single && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0];\n      if (file.mtime !== undefined || file.mode !== undefined) {\n        let buffer = await blockstore.get(leaf.cid);\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: buffer\n        });\n        buffer = encode(prepare({ Data: leaf.unixfs.marshal() }));\n        leaf.cid = await persist(buffer, blockstore, {\n          ...options,\n          codec: dagPb,\n          hasher: options.hasher,\n          cidVersion: options.cidVersion\n        });\n        leaf.size = buffer.length;\n      }\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size\n      };\n    }\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    });\n    const links = leaves.filter(leaf => {\n      if (leaf.cid.code === rawCodec.code && leaf.size) {\n        return true;\n      }\n      if (leaf.unixfs && !leaf.unixfs.data && leaf.unixfs.fileSize()) {\n        return true;\n      }\n      return Boolean(leaf.unixfs && leaf.unixfs.data && leaf.unixfs.data.length);\n    }).map(leaf => {\n      if (leaf.cid.code === rawCodec.code) {\n        f.addBlockSize(leaf.size);\n        return {\n          Name: '',\n          Tsize: leaf.size,\n          Hash: leaf.cid\n        };\n      }\n      if (!leaf.unixfs || !leaf.unixfs.data) {\n        f.addBlockSize(leaf.unixfs && leaf.unixfs.fileSize() || 0);\n      } else {\n        f.addBlockSize(leaf.unixfs.data.length);\n      }\n      return {\n        Name: '',\n        Tsize: leaf.size,\n        Hash: leaf.cid\n      };\n    });\n    const node = {\n      Data: f.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, blockstore, options);\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: buffer.length + node.Links.reduce((acc, curr) => acc + curr.Tsize, 0)\n    };\n  }\n  return reducer;\n};\nfunction fileBuilder(file, block, options) {\n  const dagBuilder = dagBuilders[options.strategy];\n  if (!dagBuilder) {\n    throw errCode(new Error(`Unknown importer build strategy name: ${ options.strategy }`), 'ERR_BAD_STRATEGY');\n  }\n  return dagBuilder(buildFileBatch(file, block, options), reduce(file, block, options), options);\n}\nexport default fileBuilder;", "import all from 'it-all';\nasync function flat(source, reduce) {\n  return reduce(await all(source));\n}\nexport default flat;", "import batch from 'it-batch';\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n  return roots[0];\n}\nexport default balanced;", "import batch from 'it-batch';\nasync function trickleStream(source, reduce, options) {\n  const root = new Root(options.layerRepeat);\n  let iteration = 0;\n  let maxDepth = 1;\n  let subTree = root;\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce));\n      }\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++;\n      }\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration);\n      iteration++;\n    }\n    subTree.append(layer);\n  }\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce));\n  }\n  return root.reduce(reduce);\n}\nexport default trickleStream;\nclass SubTree {\n  constructor(maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth;\n    this.layerRepeat = layerRepeat;\n    this.currentDepth = 1;\n    this.iteration = iteration;\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    };\n  }\n  isFull() {\n    if (!this.root.data) {\n      return false;\n    }\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      this._addNextNodeToParent(this.node);\n      return false;\n    }\n    const distantRelative = this._findParent(this.node, this.currentDepth);\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative);\n      return false;\n    }\n    return true;\n  }\n  _addNextNodeToParent(parent) {\n    this.parent = parent;\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    };\n    parent.children.push(nextNode);\n    this.currentDepth = nextNode.depth;\n    this.node = nextNode;\n  }\n  append(layer) {\n    this.node.data = layer;\n  }\n  reduce(reduce) {\n    return this._reduce(this.root, reduce);\n  }\n  async _reduce(node, reduce) {\n    let children = [];\n    if (node.children.length) {\n      children = await Promise.all(node.children.filter(child => child.data).map(child => this._reduce(child, reduce)));\n    }\n    return reduce((node.data || []).concat(children));\n  }\n  _findParent(node, depth) {\n    const parent = node.parent;\n    if (!parent || parent.depth === 0) {\n      return;\n    }\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      return this._findParent(parent, depth);\n    }\n    return parent;\n  }\n}\nclass Root extends SubTree {\n  constructor(layerRepeat) {\n    super(0, layerRepeat);\n    this.root.depth = 0;\n    this.currentDepth = 1;\n  }\n  addChild(child) {\n    this.root.children.push(child);\n  }\n  reduce(reduce) {\n    return reduce((this.root.data || []).concat(this.root.children));\n  }\n}", "import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../../utils/persist.js';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as raw from 'multiformats/codecs/raw';\nasync function* bufferImporter(file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path);\n      let unixfs;\n      const opts = {\n        codec: dagPb,\n        cidVersion: options.cidVersion,\n        hasher: options.hasher,\n        onlyHash: options.onlyHash\n      };\n      if (options.rawLeaves) {\n        opts.codec = raw;\n        opts.cidVersion = 1;\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer\n        });\n        buffer = dagPb.encode({\n          Data: unixfs.marshal(),\n          Links: []\n        });\n      }\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      };\n    };\n  }\n}\nexport default bufferImporter;", "import dirBuilder from './dir.js';\nimport fileBuilder from './file/index.js';\nimport errCode from 'err-code';\nimport rabin from '../chunker/rabin.js';\nimport fixedSize from '../chunker/fixed-size.js';\nimport validateChunks from './validate-chunks.js';\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n    if (entry.content) {\n      let chunker;\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin;\n      } else {\n        chunker = fixedSize;\n      }\n      let chunkValidator;\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = validateChunks;\n      }\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => fileBuilder(file, blockstore, options);\n    } else if (entry.path) {\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dirBuilder(dir, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\nexport default dagBuilder;", "import BufferList from 'bl/BufferList.js';\nimport { create } from 'rabin-wasm';\nimport errcode from 'err-code';\nasync function* rabinChunker(source, options) {\n  let min, max, avg;\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize;\n    min = options.minChunkSize;\n    max = options.maxChunkSize;\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n  } else {\n    avg = options.avgChunkSize;\n    min = avg / 3;\n    max = avg + avg / 2;\n  }\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n  }\n  if (max < min) {\n    max = min;\n  }\n  if (avg < min) {\n    avg = min;\n  }\n  const sizepow = Math.floor(Math.log2(avg));\n  for await (const chunk of rabin(source, {\n      min: min,\n      max: max,\n      bits: sizepow,\n      window: options.window,\n      polynomial: options.polynomial\n    })) {\n    yield chunk;\n  }\n}\nexport default rabinChunker;\nasync function* rabin(source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window);\n  const buffers = new BufferList();\n  for await (const chunk of source) {\n    buffers.append(chunk);\n    const sizes = r.fingerprint(chunk);\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const buf = buffers.slice(0, size);\n      buffers.consume(size);\n      yield buf;\n    }\n  }\n  if (buffers.length) {\n    yield buffers.slice(0);\n  }\n}", "import BufferList from 'bl/BufferList.js';\nasync function* fixedSizeChunker(source, options) {\n  let bl = new BufferList();\n  let currentLength = 0;\n  let emitted = false;\n  const maxChunkSize = options.maxChunkSize;\n  for await (const buffer of source) {\n    bl.append(buffer);\n    currentLength += buffer.length;\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize);\n      emitted = true;\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList();\n        currentLength = 0;\n      } else {\n        const newBl = new BufferList();\n        newBl.append(bl.shallowSlice(maxChunkSize));\n        bl = newBl;\n        currentLength -= maxChunkSize;\n      }\n    }\n  }\n  if (!emitted || currentLength) {\n    yield bl.slice(0, currentLength);\n  }\n}\nexport default fixedSizeChunker;", "import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\nexport default validateChunks;", "class Dir {\n  constructor(props, options) {\n    this.options = options || {};\n    this.root = props.root;\n    this.dir = props.dir;\n    this.path = props.path;\n    this.dirty = props.dirty;\n    this.flat = props.flat;\n    this.parent = props.parent;\n    this.parentKey = props.parentKey;\n    this.unixfs = props.unixfs;\n    this.mode = props.mode;\n    this.mtime = props.mtime;\n    this.cid = undefined;\n    this.size = undefined;\n  }\n  async put(name, value) {\n  }\n  get(name) {\n    return Promise.resolve(this);\n  }\n  async *eachChildSeries() {\n  }\n  async *flush(blockstore) {\n  }\n}\nexport default Dir;", "import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nclass DirFlat extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._children = {};\n  }\n  async put(name, value) {\n    this.cid = undefined;\n    this.size = undefined;\n    this._children[name] = value;\n  }\n  get(name) {\n    return Promise.resolve(this._children[name]);\n  }\n  childCount() {\n    return Object.keys(this._children).length;\n  }\n  directChildrenCount() {\n    return this.childCount();\n  }\n  onlyChild() {\n    return this._children[Object.keys(this._children)[0]];\n  }\n  async *eachChildSeries() {\n    const keys = Object.keys(this._children);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield {\n        key: key,\n        child: this._children[key]\n      };\n    }\n  }\n  async *flush(block) {\n    const children = Object.keys(this._children);\n    const links = [];\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]];\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry;\n          yield child;\n        }\n      }\n      if (child.size != null && child.cid) {\n        links.push({\n          Name: children[i],\n          Tsize: child.size,\n          Hash: child.cid\n        });\n      }\n    }\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    });\n    const node = {\n      Data: unixfs.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, block, this.options);\n    const size = buffer.length + node.Links.reduce((acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize), 0);\n    this.cid = cid;\n    this.size = size;\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    };\n  }\n}\nexport default DirFlat;", "import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nimport {\n  createHAMT,\n  Bucket\n} from 'hamt-sharding';\nclass DirSharded extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._bucket = createHAMT({\n      hashFn: options.hamtHashFn,\n      bits: options.hamtBucketBits\n    });\n  }\n  async put(name, value) {\n    await this._bucket.put(name, value);\n  }\n  get(name) {\n    return this._bucket.get(name);\n  }\n  childCount() {\n    return this._bucket.leafCount();\n  }\n  directChildrenCount() {\n    return this._bucket.childrenCount();\n  }\n  onlyChild() {\n    return this._bucket.onlyChild();\n  }\n  async *eachChildSeries() {\n    for await (const {key, value} of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      };\n    }\n  }\n  async *flush(blockstore) {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      };\n    }\n  }\n}\nexport default DirSharded;\nasync function* flush(bucket, blockstore, shardRoot, options) {\n  const children = bucket._children;\n  const links = [];\n  let childrenSize = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i);\n    if (!child) {\n      continue;\n    }\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0');\n    if (child instanceof Bucket) {\n      let shard;\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard;\n      }\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found');\n      }\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      });\n      childrenSize += shard.size;\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value;\n      let flushedDir;\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry;\n        yield flushedDir;\n      }\n      const label = labelPrefix + child.key;\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      });\n      childrenSize += flushedDir.size;\n    } else {\n      const value = child.value;\n      if (!value.cid) {\n        continue;\n      }\n      const label = labelPrefix + child.key;\n      const size = value.size;\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      });\n      childrenSize += size;\n    }\n  }\n  const data = Uint8Array.from(children.bitField().reverse());\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: options.hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  });\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  };\n  const buffer = encode(prepare(node));\n  const cid = await persist(buffer, blockstore, options);\n  const size = buffer.length + childrenSize;\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  };\n}", "import DirSharded from './dir-sharded.js';\nimport DirFlat from './dir-flat.js';\nasync function flatToShard(child, dir, threshold, options) {\n  let newDir = dir;\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options);\n  }\n  const parent = newDir.parent;\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir;\n      }\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found');\n      }\n      await parent.put(newDir.parentKey, newDir);\n    }\n    return flatToShard(newDir, parent, threshold, options);\n  }\n  return newDir;\n}\nasync function convertToShard(oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options);\n  for await (const {key, child} of oldDir.eachChildSeries()) {\n    await newDir.put(key, child);\n  }\n  return newDir;\n}\nexport default flatToShard;", "const toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nexport default toPathComponents;", "import DirFlat from './dir-flat.js';\nimport flatToShard from './flat-to-shard.js';\nimport Dir from './dir.js';\nimport toPathComponents from './utils/to-path-components.js';\nasync function addToTree(elem, tree, options) {\n  const pathElems = toPathComponents(elem.path || '');\n  const lastIndex = pathElems.length - 1;\n  let parent = tree;\n  let currentPath = '';\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i];\n    currentPath += `${ currentPath ? '/' : '' }${ pathElem }`;\n    const last = i === lastIndex;\n    parent.dirty = true;\n    parent.cid = undefined;\n    parent.size = undefined;\n    if (last) {\n      await parent.put(pathElem, elem);\n      tree = await flatToShard(null, parent, options.shardSplitThreshold, options);\n    } else {\n      let dir = await parent.get(pathElem);\n      if (!dir || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent: parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir && dir.unixfs && dir.unixfs.mtime,\n          mode: dir && dir.unixfs && dir.unixfs.mode\n        }, options);\n      }\n      await parent.put(pathElem, dir);\n      parent = dir;\n    }\n  }\n  return tree;\n}\nasync function* flushAndYield(tree, blockstore) {\n  if (!(tree instanceof Dir)) {\n    if (tree && tree.unixfs && tree.unixfs.isDirectory()) {\n      yield tree;\n    }\n    return;\n  }\n  yield* tree.flush(blockstore);\n}\nasync function* treeBuilder(source, block, options) {\n  let tree = new DirFlat({\n    root: true,\n    dir: true,\n    path: '',\n    dirty: true,\n    flat: true\n  }, options);\n  for await (const entry of source) {\n    if (!entry) {\n      continue;\n    }\n    tree = await addToTree(entry, tree, options);\n    if (!entry.unixfs || !entry.unixfs.isDirectory()) {\n      yield entry;\n    }\n  }\n  if (options.wrapWithDirectory) {\n    yield* flushAndYield(tree, block);\n  } else {\n    for await (const unwrapped of tree.eachChildSeries()) {\n      if (!unwrapped) {\n        continue;\n      }\n      yield* flushAndYield(unwrapped.child, block);\n    }\n  }\n}\nexport default treeBuilder;", "import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport blobToIt from 'blob-to-it';\nimport itPeekable from 'it-peekable';\nimport all from 'it-all';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js';\nasync function* toAsyncIterable(thing) {\n  yield thing;\n}\nexport async function normaliseContent(input) {\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input));\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()));\n  }\n  if (isBlob(input)) {\n    return blobToIt(input);\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return toAsyncIterable(new Uint8Array(0));\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)));\n    }\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes);\n    }\n  }\n  throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n  return uint8ArrayFromString(chunk.toString());\n}", "export function isBytes(obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\nexport function isBlob(obj) {\n  return obj.constructor && (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') && typeof obj.stream === 'function';\n}\nexport function isFileObject(obj) {\n  return typeof obj === 'object' && (obj.path || obj.content);\n}\nexport const isReadableStream = value => value && typeof value.getReader === 'function';", "import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateSingle(input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent);\n    return;\n  }\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield { content: [] };\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent);\n      return;\n    }\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}", "import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateSingle(input, normaliseContent);\n}", "import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield* [];\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n    if (value._readableState) {\n      yield* map(peekable, value => toFileObject({ content: value }, normaliseContent));\n      return;\n    }\n    if (isBytes(value)) {\n      yield toFileObject({ content: peekable }, normaliseContent);\n      return;\n    }\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield* map(peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}", "import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateMultiple(input, normaliseContent);\n}", "import { normaliseInput as normaliseInputSingle } from 'ipfs-core-utils/files/normalise-input-single';\nimport { normaliseInput as normaliseInputMultiple } from 'ipfs-core-utils/files/normalise-input-multiple';\nfunction isBytes(obj) {\n    return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\nfunction isBlob(obj) {\n    return Boolean(obj.constructor) &&\n        (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n        typeof obj.stream === 'function';\n}\nfunction isSingle(input) {\n    return typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || '_readableState' in input;\n}\n/**\n * Get a single or multiple normaliser depending on the input.\n */\nexport function getNormaliser(input) {\n    if (isSingle(input)) {\n        return normaliseInputSingle(input);\n    }\n    else {\n        return normaliseInputMultiple(input);\n    }\n}\n", "import { CID } from 'multiformats';\nimport { BaseBlockstore } from 'blockstore-core';\nexport class MemoryBlockStore extends BaseBlockstore {\n    constructor() {\n        super();\n        this.store = new Map();\n    }\n    async *blocks() {\n        for (const [cidStr, bytes] of this.store.entries()) {\n            yield { cid: CID.parse(cidStr), bytes };\n        }\n    }\n    put(cid, bytes) {\n        this.store.set(cid.toString(), bytes);\n        return Promise.resolve();\n    }\n    get(cid) {\n        const bytes = this.store.get(cid.toString());\n        if (!bytes) {\n            throw new Error(`block with cid ${cid.toString()} no found`);\n        }\n        return Promise.resolve(bytes);\n    }\n    has(cid) {\n        return Promise.resolve(this.store.has(cid.toString()));\n    }\n    close() {\n        this.store.clear();\n        return Promise.resolve();\n    }\n}\n", "import errCode from 'err-code';\nexport function notFoundError(err) {\n  err = err || new Error('Not Found');\n  return errCode(err, 'ERR_NOT_FOUND');\n}\nexport function abortedError(err) {\n  err = err || new Error('Aborted');\n  return errCode(err, 'ERR_ABORTED');\n}", "import drain from 'it-drain';\nimport filter from 'it-filter';\nimport take from 'it-take';\nimport all from 'it-all';\nconst sortAll = (iterable, sorter) => {\n  return async function* () {\n    const values = await all(iterable);\n    yield* values.sort(sorter);\n  }();\n};\nexport class BaseBlockstore {\n  open() {\n    return Promise.reject(new Error('.open is not implemented'));\n  }\n  close() {\n    return Promise.reject(new Error('.close is not implemented'));\n  }\n  put(key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'));\n  }\n  get(key, options) {\n    return Promise.reject(new Error('.get is not implemented'));\n  }\n  has(key, options) {\n    return Promise.reject(new Error('.has is not implemented'));\n  }\n  delete(key, options) {\n    return Promise.reject(new Error('.delete is not implemented'));\n  }\n  async *putMany(source, options = {}) {\n    for await (const {key, value} of source) {\n      await this.put(key, value, options);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  async *getMany(source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options);\n    }\n  }\n  async *deleteMany(source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options);\n      yield key;\n    }\n  }\n  batch() {\n    let puts = [];\n    let dels = [];\n    return {\n      put(key, value) {\n        puts.push({\n          key,\n          value\n        });\n      },\n      delete(key) {\n        dels.push(key);\n      },\n      commit: async options => {\n        await drain(this.putMany(puts, options));\n        puts = [];\n        await drain(this.deleteMany(dels, options));\n        dels = [];\n      }\n    };\n  }\n  async *_all(q, options) {\n    throw new Error('._all is not implemented');\n  }\n  async *_allKeys(q, options) {\n    throw new Error('._allKeys is not implemented');\n  }\n  query(q, options) {\n    let it = this._all(q, options);\n    if (q.prefix != null) {\n      it = filter(it, e => e.key.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= (q.offset || 0));\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n  queryKeys(q, options) {\n    let it = this._allKeys(q, options);\n    if (q.prefix != null) {\n      it = filter(it, cid => cid.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= q.offset);\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n}", "import { BaseBlockstore } from './base.js';\nimport { base32 } from 'multiformats/bases/base32';\nimport * as raw from 'multiformats/codecs/raw';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport * as Errors from './errors.js';\nexport class MemoryBlockstore extends BaseBlockstore {\n  constructor() {\n    super();\n    this.data = {};\n  }\n  open() {\n    return Promise.resolve();\n  }\n  close() {\n    return Promise.resolve();\n  }\n  async put(key, val) {\n    this.data[base32.encode(key.multihash.bytes)] = val;\n  }\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists)\n      throw Errors.notFoundError();\n    return this.data[base32.encode(key.multihash.bytes)];\n  }\n  async has(key) {\n    return this.data[base32.encode(key.multihash.bytes)] !== undefined;\n  }\n  async delete(key) {\n    delete this.data[base32.encode(key.multihash.bytes)];\n  }\n  async *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: CID.createV1(raw.code, Digest.decode(base32.decode(key))),\n      value\n    }));\n  }\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(([key]) => CID.createV1(raw.code, Digest.decode(base32.decode(key))));\n  }\n}", "import * as ErrorsImport from './errors.js';\nexport {\n  BaseBlockstore\n} from './base.js';\nexport {\n  MemoryBlockstore\n} from './memory.js';\nexport const Errors = { ...ErrorsImport };", "import { sha256 } from 'multiformats/hashes/sha2';\nexport const unixfsImporterOptionsDefault = {\n    cidVersion: 1,\n    chunker: 'fixed',\n    maxChunkSize: 262144,\n    hasher: sha256,\n    rawLeaves: true,\n    wrapWithDirectory: true,\n    maxChildrenPerNode: 174\n};\n", "const MAX_HEADER_LENGTH = 2000\nconst THROW_ON_MAX_HEADER_LENGTH_EXCEEDED = false\n\nfunction hasRel (x) {\n  return x && x.rel\n}\n\nfunction intoRels (acc, x) {\n  function splitRel (rel) {\n    acc[rel] = Object.assign({}, x, { rel: rel })\n  }\n\n  x.rel.split(/\\s+/).forEach(splitRel)\n\n  return acc\n}\n\nfunction createObjects (acc, p) {\n  // rel=\"next\" => 1: rel 2: next\n  const m = p.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/)\n  if (m) acc[m[1]] = m[2]\n  return acc\n}\n\nfunction parseLink (link) {\n  try {\n    const m = link.match(/<?([^>]*)>(.*)/)\n    const linkUrl = m[1]\n    const parts = m[2].split(';')\n    const qry = {}\n    // The origin is unused but it's required to parse relative URLs\n    const url = new URL(linkUrl, 'https://example.com')\n\n    for (const [key, value] of url.searchParams) {\n      qry[key] = value\n    }\n\n    parts.shift()\n\n    let info = parts.reduce(createObjects, {})\n    info = Object.assign({}, qry, info)\n    info.url = linkUrl\n    return info\n  } catch {\n    return null\n  }\n}\n\nfunction checkHeader (linkHeader, options) {\n  if (!linkHeader) return false\n\n  options = options || {}\n  const maxHeaderLength = options.maxHeaderLength || MAX_HEADER_LENGTH\n  const throwOnMaxHeaderLengthExceeded = options.throwOnMaxHeaderLengthExceeded || THROW_ON_MAX_HEADER_LENGTH_EXCEEDED\n\n  if (linkHeader.length > maxHeaderLength) {\n    if (throwOnMaxHeaderLengthExceeded) {\n      throw new Error('Input string too long, it should be under ' + maxHeaderLength + ' characters.')\n    } else {\n      return false\n    }\n  }\n  return true\n}\n\nfunction parseLinkHeader (linkHeader, options) {\n  if (!checkHeader(linkHeader, options)) return null\n\n  return linkHeader.split(/,\\s*</)\n    .map(parseLink)\n    .filter(hasRel)\n    .reduce(intoRels, {})\n}\n\nexport { parseLinkHeader }\n", "import toIterable from 'browser-readablestream-to-it';\nimport { CarBlockIterator } from '@ipld/car/iterator';\nimport { recursive as unixFsExporter } from 'ipfs-unixfs-exporter';\nimport { VerifyingGetOnlyBlockStore } from \"./utils/verifying-get-only-blockstore.js\";\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\n// Export unixfs entries from car file\nexport async function* unpack(carReader, roots) {\n    const verifyingBlockService = VerifyingGetOnlyBlockStore.fromCarReader(carReader);\n    if (!roots || roots.length === 0) {\n        roots = await carReader.getRoots();\n    }\n    for (const root of roots) {\n        yield* unixFsExporter(root, verifyingBlockService, { /* options */});\n    }\n}\nexport async function* unpackStream(readable, { roots, blockstore: userBlockstore } = {}) {\n    const carIterator = await CarBlockIterator.fromIterable(asAsyncIterable(readable));\n    const blockstore = userBlockstore || new MemoryBlockStore();\n    for await (const block of carIterator) {\n        await blockstore.put(block.cid, block.bytes);\n    }\n    const verifyingBlockStore = VerifyingGetOnlyBlockStore.fromBlockstore(blockstore);\n    if (!roots || roots.length === 0) {\n        roots = await carIterator.getRoots();\n    }\n    for (const root of roots) {\n        yield* unixFsExporter(root, verifyingBlockStore);\n    }\n}\n/**\n * Upgrade a ReadableStream to an AsyncIterable if it isn't already\n *\n * ReadableStream (e.g res.body) is asyncIterable in node, but not in chrome, yet.\n * see: https://bugs.chromium.org/p/chromium/issues/detail?id=929585\n */\nfunction asAsyncIterable(readable) {\n    // @ts-ignore how to convince tsc that we are checking the type here?\n    return Symbol.asyncIterator in readable ? readable : toIterable(readable);\n}\n", "import errCode from 'err-code';\nimport { CID } from 'multiformats/cid';\nimport resolve from './resolvers/index.js';\nimport last from 'it-last';\nconst toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\^/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nconst cidAndRest = path => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    };\n  }\n  const cid = CID.asCID(path);\n  if (cid) {\n    return {\n      cid,\n      toResolve: []\n    };\n  }\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6);\n    }\n    const output = toPathComponents(path);\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    };\n  }\n  throw errCode(new Error(`Unknown path type ${ path }`), 'ERR_BAD_PATH');\n};\nexport async function* walkPath(path, blockstore, options = {}) {\n  let {cid, toResolve} = cidAndRest(path);\n  let name = cid.toString();\n  let entryPath = name;\n  const startingDepth = toResolve.length;\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options);\n    if (!result.entry && !result.next) {\n      throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n    }\n    if (result.entry) {\n      yield result.entry;\n    }\n    if (!result.next) {\n      return;\n    }\n    toResolve = result.next.toResolve;\n    cid = result.next.cid;\n    name = result.next.name;\n    entryPath = result.next.path;\n  }\n}\nexport async function exporter(path, blockstore, options = {}) {\n  const result = await last(walkPath(path, blockstore, options));\n  if (!result) {\n    throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n  }\n  return result;\n}\nexport async function* recursive(path, blockstore, options = {}) {\n  const node = await exporter(path, blockstore, options);\n  if (!node) {\n    return;\n  }\n  yield node;\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child;\n    }\n  }\n  async function* recurse(node, options) {\n    for await (const file of node.content(options)) {\n      yield file;\n      if (file instanceof Uint8Array) {\n        continue;\n      }\n      if (file.type === 'directory') {\n        yield* recurse(file, options);\n      }\n    }\n  }\n}", "import errCode from 'err-code';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as raw from 'multiformats/codecs/raw';\nimport { identity } from 'multiformats/hashes/identity';\nimport dagPbResolver from './unixfs-v1/index.js';\nimport rawResolver from './raw.js';\nimport dagCborResolver from './dag-cbor.js';\nimport identifyResolver from './identity.js';\nconst resolvers = {\n  [dagPb.code]: dagPbResolver,\n  [raw.code]: rawResolver,\n  [dagCbor.code]: dagCborResolver,\n  [identity.code]: identifyResolver\n};\nfunction resolve(cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code];\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for code ${ cid.code }`), 'ERR_NO_RESOLVER');\n  }\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options);\n}\nexport default resolve;", "import errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport findShardCid from '../../utils/find-cid-in-shard.js';\nimport { decode } from '@ipld/dag-pb';\nimport contentFile from './content/file.js';\nimport contentDirectory from './content/directory.js';\nimport contentHamtShardedDirectory from './content/hamt-sharded-directory.js';\nconst findLinkCid = (node, name) => {\n  const link = node.Links.find(link => link.Name === name);\n  return link && link.Hash;\n};\nconst contentExporters = {\n  raw: contentFile,\n  file: contentFile,\n  directory: contentDirectory,\n  'hamt-sharded-directory': contentHamtShardedDirectory,\n  metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => [];\n  },\n  symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => [];\n  }\n};\nconst unixFsResolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options);\n  const node = decode(block);\n  let unixfs;\n  let next;\n  if (!name) {\n    name = cid.toString();\n  }\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  try {\n    unixfs = UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS');\n  }\n  if (!path) {\n    path = name;\n  }\n  if (toResolve.length) {\n    let linkCid;\n    if (unixfs && unixfs.type === 'hamt-sharded-directory') {\n      linkCid = await findShardCid(node, toResolve[0], blockstore);\n    } else {\n      linkCid = findLinkCid(node, toResolve[0]);\n    }\n    if (!linkCid) {\n      throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND');\n    }\n    const nextName = toResolve.shift();\n    const nextPath = `${ path }/${ nextName }`;\n    next = {\n      cid: linkCid,\n      toResolve,\n      name: nextName || '',\n      path: nextPath\n    };\n  }\n  return {\n    entry: {\n      type: unixfs.isDirectory() ? 'directory' : 'file',\n      name,\n      path,\n      cid,\n      content: contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore),\n      unixfs,\n      depth,\n      node,\n      size: unixfs.fileSize()\n    },\n    next\n  };\n};\nexport default unixFsResolver;", "import {\n  Bucket,\n  createHAMT\n} from 'hamt-sharding';\nimport { decode } from '@ipld/dag-pb';\nimport { murmur3128 } from '@multiformats/murmur3';\nconst hashFn = async function (buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n};\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(links.map(link => {\n    if (link.Name == null) {\n      throw new Error('Unexpected Link without a Name');\n    }\n    if (link.Name.length === 2) {\n      const pos = parseInt(link.Name, 16);\n      return bucket._putObjectAt(pos, new Bucket({\n        hash: rootBucket._options.hash,\n        bits: rootBucket._options.bits\n      }, bucket, pos));\n    }\n    return rootBucket.put(link.Name.substring(2), true);\n  }));\n};\nconst toPrefix = position => {\n  return position.toString(16).toUpperCase().padStart(2, '0').substring(0, 2);\n};\nconst toBucketPath = position => {\n  let bucket = position.bucket;\n  const path = [];\n  while (bucket._parent) {\n    path.push(bucket);\n    bucket = bucket._parent;\n  }\n  path.push(bucket);\n  return path.reverse();\n};\nconst findShardCid = async (node, name, blockstore, context, options) => {\n  if (!context) {\n    const rootBucket = createHAMT({ hashFn });\n    context = {\n      rootBucket,\n      hamtDepth: 1,\n      lastBucket: rootBucket\n    };\n  }\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket);\n  const position = await context.rootBucket._findNewBucketAndPos(name);\n  let prefix = toPrefix(position.pos);\n  const bucketPath = toBucketPath(position);\n  if (bucketPath.length > context.hamtDepth) {\n    context.lastBucket = bucketPath[context.hamtDepth];\n    prefix = toPrefix(context.lastBucket._posAtParent);\n  }\n  const link = node.Links.find(link => {\n    if (link.Name == null) {\n      return false;\n    }\n    const entryPrefix = link.Name.substring(0, 2);\n    const entryName = link.Name.substring(2);\n    if (entryPrefix !== prefix) {\n      return false;\n    }\n    if (entryName && entryName !== name) {\n      return false;\n    }\n    return true;\n  });\n  if (!link) {\n    return null;\n  }\n  if (link.Name != null && link.Name.substring(2) === name) {\n    return link.Hash;\n  }\n  context.hamtDepth++;\n  const block = await blockstore.get(link.Hash, options);\n  node = decode(block);\n  return findShardCid(node, name, blockstore, context, options);\n};\nexport default findShardCid;", "function extractDataFromBlock(block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length;\n  const blockEnd = blockStart + blockLength;\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    return new Uint8Array(0);\n  }\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    block = block.slice(0, requestedEnd - blockStart);\n  }\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    block = block.slice(requestedStart - blockStart);\n  }\n  return block;\n}\nexport default extractDataFromBlock;", "import errCode from 'err-code';\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0;\n  }\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n  }\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS');\n  }\n  if (!length && length !== 0) {\n    length = size - offset;\n  }\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n  }\n  if (offset + length > size) {\n    length = size - offset;\n  }\n  return {\n    offset,\n    length\n  };\n};\nexport default validateOffsetAndLength;", "import extractDataFromBlock from '../../../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../../../utils/validate-offset-and-length.js';\nimport { UnixFS } from 'ipfs-unixfs';\nimport errCode from 'err-code';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as raw from 'multiformats/codecs/raw';\nasync function* emitBytes(blockstore, node, start, end, streamPosition = 0, options) {\n  if (node instanceof Uint8Array) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += buf.length;\n    return streamPosition;\n  }\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  let file;\n  try {\n    file = UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS');\n  }\n  if (file.data && file.data.length) {\n    const buf = extractDataFromBlock(file.data, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += file.data.length;\n  }\n  let childStart = streamPosition;\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i];\n    const childEnd = streamPosition + file.blockSizes[i];\n    if (start >= childStart && start < childEnd || end > childStart && end <= childEnd || start < childStart && end > childEnd) {\n      const block = await blockstore.get(childLink.Hash, { signal: options.signal });\n      let child;\n      switch (childLink.Hash.code) {\n      case dagPb.code:\n        child = await dagPb.decode(block);\n        break;\n      case raw.code:\n        child = block;\n        break;\n      case dagCbor.code:\n        child = await dagCbor.decode(block);\n        break;\n      default:\n        throw Error(`Unsupported codec: ${ childLink.Hash.code }`);\n      }\n      for await (const buf of emitBytes(blockstore, child, start, end, streamPosition, options)) {\n        streamPosition += buf.length;\n        yield buf;\n      }\n    }\n    streamPosition = childEnd;\n    childStart = childEnd + 1;\n  }\n}\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldFileContent(options = {}) {\n    const fileSize = unixfs.fileSize();\n    if (fileSize === undefined) {\n      throw new Error('File was a directory');\n    }\n    const {offset, length} = validateOffsetAndLength(fileSize, options.offset, options.length);\n    const start = offset;\n    const end = offset + length;\n    return emitBytes(blockstore, node, start, end, 0, options);\n  }\n  return yieldFileContent;\n};\nexport default fileContent;", "const directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  async function* yieldDirectoryContent(options = {}) {\n    const offset = options.offset || 0;\n    const length = options.length || node.Links.length;\n    const links = node.Links.slice(offset, length);\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${ path }/${ link.Name || '' }`, [], depth + 1, blockstore, options);\n      if (result.entry) {\n        yield result.entry;\n      }\n    }\n  }\n  return yieldDirectoryContent;\n};\nexport default directoryContent;", "import { decode } from '@ipld/dag-pb';\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldHamtDirectoryContent(options = {}) {\n    return listDirectory(node, path, resolve, depth, blockstore, options);\n  }\n  return yieldHamtDirectoryContent;\n};\nasync function* listDirectory(node, path, resolve, depth, blockstore, options) {\n  const links = node.Links;\n  for (const link of links) {\n    const name = link.Name != null ? link.Name.substring(2) : null;\n    if (name) {\n      const result = await resolve(link.Hash, name, `${ path }/${ name }`, [], depth + 1, blockstore, options);\n      yield result.entry;\n    } else {\n      const block = await blockstore.get(link.Hash);\n      node = decode(block);\n      for await (const file of listDirectory(node, path, resolve, depth, blockstore, options)) {\n        yield file;\n      }\n    }\n  }\n}\nexport default hamtShardedDirectoryContent;", "import errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const block = await blockstore.get(cid, options);\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  };\n};\nexport default resolve;", "import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nimport * as dagCbor from '@ipld/dag-cbor';\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid);\n  const object = dagCbor.decode(block);\n  let subObject = object;\n  let subPath = path;\n  while (toResolve.length) {\n    const prop = toResolve[0];\n    if (prop in subObject) {\n      toResolve.shift();\n      subPath = `${ subPath }/${ prop }`;\n      const subObjectCid = CID.asCID(subObject[prop]);\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function* () {\n              yield object;\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        };\n      }\n      subObject = subObject[prop];\n    } else {\n      throw errCode(new Error(`No property named ${ prop } found in cbor node ${ cid }`), 'ERR_NO_PROP');\n    }\n  }\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function* () {\n        yield object;\n      }\n    }\n  };\n};\nexport default resolve;", "import errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nimport * as mh from 'multiformats/hashes/digest';\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const buf = await mh.decode(cid.multihash.bytes);\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: buf.digest.length,\n      node: buf.digest\n    }\n  };\n};\nexport default resolve;", "export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}", "import { equals } from 'uint8arrays/equals';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { BaseBlockstore } from 'blockstore-core';\nexport class VerifyingGetOnlyBlockStore extends BaseBlockstore {\n    constructor(blockstore) {\n        super();\n        this.store = blockstore;\n    }\n    async get(cid) {\n        const res = await this.store.get(cid);\n        if (!res) {\n            throw new Error(`Incomplete CAR. Block missing for CID ${cid}`);\n        }\n        if (!isValid({ cid, bytes: res })) {\n            throw new Error(`Invalid CAR. Hash of block data does not match CID ${cid}`);\n        }\n        return res;\n    }\n    static fromBlockstore(b) {\n        return new VerifyingGetOnlyBlockStore(b);\n    }\n    static fromCarReader(cr) {\n        return new VerifyingGetOnlyBlockStore({\n            // Return bytes in the same fashion as a Blockstore implementation\n            get: async (cid) => {\n                const block = await cr.get(cid);\n                return block === null || block === void 0 ? void 0 : block.bytes;\n            }\n        });\n    }\n}\nasync function isValid({ cid, bytes }) {\n    const hash = await sha256.digest(bytes);\n    return equals(hash.digest, cid.multihash.digest);\n}\n", "import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};", "import {\n  CarReader,\n  CarWriter\n} from '@ipld/car';\nimport { Block } from 'multiformats/block';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as cbor from '@ipld/dag-cbor';\nimport * as pb from '@ipld/dag-pb';\nexport class TreewalkCarSplitter {\n  constructor(reader, targetSize, options = {}) {\n    if (typeof targetSize !== 'number' || targetSize <= 0) {\n      throw new Error('invalid target chunk size');\n    }\n    this._reader = reader;\n    this._targetSize = targetSize;\n    this._decoders = [\n      pb,\n      raw,\n      cbor,\n      ...options.decoders || []\n    ];\n  }\n  async *cars() {\n    const roots = await this._reader.getRoots();\n    if (roots.length !== 1)\n      throw new Error(`unexpected number of roots: ${ roots.length }`);\n    let channel;\n    for await (const val of this._cars(roots[0])) {\n      channel = val.channel;\n      if (val.out)\n        yield val.out;\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    channel.writer.close();\n    yield channel.out;\n  }\n  async _get(cid) {\n    const rawBlock = await this._reader.get(cid);\n    if (!rawBlock)\n      throw new Error(`missing block for ${ cid }`);\n    const {bytes} = rawBlock;\n    const decoder = this._decoders.find(d => d.code === cid.code);\n    if (!decoder)\n      throw new Error(`missing decoder for ${ cid.code }`);\n    return new Block({\n      cid,\n      bytes,\n      value: decoder.decode(bytes)\n    });\n  }\n  async *_cars(cid, parents = [], channel = undefined) {\n    const block = await this._get(cid);\n    channel = channel || Object.assign(CarWriter.create(cid), { size: 0 });\n    if (channel.size > 0 && channel.size + block.bytes.byteLength >= this._targetSize) {\n      channel.writer.close();\n      const {out} = channel;\n      channel = newCar(parents);\n      yield {\n        channel,\n        out\n      };\n    }\n    parents = parents.concat(block);\n    channel.size += block.bytes.byteLength;\n    channel.writer.put(block);\n    for (const [, cid] of block.links()) {\n      for await (const val of this._cars(cid, parents, channel)) {\n        channel = val.channel;\n        yield val;\n      }\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    yield { channel };\n  }\n  static async fromIterable(iterable, targetSize, options) {\n    const reader = await CarReader.fromIterable(iterable);\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n  static async fromBlob(blob, targetSize, options) {\n    const buffer = await blob.arrayBuffer();\n    const reader = await CarReader.fromBytes(new Uint8Array(buffer));\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n}\nfunction newCar(parents) {\n  const ch = Object.assign(CarWriter.create(parents[0].cid), { size: parents.reduce((size, b) => size + b.bytes.byteLength, 0) });\n  for (const b of parents) {\n    ch.writer.put(b);\n  }\n  return ch;\n}", "import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);", "export async function getFilesFromPath() {\n  throw new Error('Unsupported in this environment');\n}\nexport async function* filesFromPath() {\n  throw new Error('Unsupported in this environment');\n}", "// TODO: Use indexedDb\nimport { MemoryBlockStore } from 'ipfs-car/blockstore/memory'\n\nexport const fetch = globalThis.fetch\nexport const Request = globalThis.Request\nexport const Response = globalThis.Response\nexport const Blob = globalThis.Blob\nexport const File = globalThis.File\nexport const Blockstore = MemoryBlockStore\n"],
  "mappings": "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",
  "names": ["exports", "module", "self", "exports", "original", "require_retry", "exports", "module", "exports", "module", "AbortError", "pRetry", "resolve", "error", "exports", "module", "last", "exports", "module", "isIterable", "pipe", "exports", "module", "encode", "MSB", "REST", "MSBALL", "INT", "exports", "module", "read", "MSB", "REST", "buf", "exports", "module", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "exports", "module", "buf", "decode", "init_varint", "code", "decode", "equals", "init_varint", "code", "digest", "name", "encode", "length", "i", "j", "decode", "string", "buffer", "decode", "encode", "name", "alphabet", "string", "buffer", "init_varint", "version", "code", "digest", "equals", "base", "decode", "length", "cid", "exports", "module", "batch", "exports", "module", "batch", "parallelBatch", "exports", "module", "exports", "module", "name", "globalThis", "from", "name", "code", "encode", "digest", "name", "from", "init_varint", "exports", "module", "undefined", "exports", "module", "exports", "module", "code", "exports", "module", "resolve", "params", "offset", "exports", "base64", "length", "string", "encode", "buffer", "i", "decode", "exports", "module", "exports", "module", "buf", "exports", "string", "buffer", "exports", "module", "alloc", "slice", "size", "buf", "exports", "module", "from", "length", "exports", "src", "name", "toString", "i", "exports", "module", "base64", "noop", "create", "alloc", "buf", "exports", "module", "buf", "exports", "module", "buffer", "create_array", "create", "buf", "length", "exports", "module", "buffer", "exports", "module", "self", "err", "exports", "exports", "module", "exports", "require_minimal", "exports", "module", "code", "decode", "encode", "name", "exports", "module", "all", "exports", "code", "len", "i", "len2", "exports", "buffer", "exports", "base64", "length", "buf", "allocUnsafe", "from", "fromString", "alloc", "string", "isBuffer", "compare", "concat", "buffer", "utf8ToBytes", "utf8Slice", "toString", "equals", "read", "i", "decodeCodePointsArray", "MAX_ARGUMENTS_LENGTH", "slice", "byteLength", "last", "code", "name", "src", "alphabet", "exports", "module", "BufferList", "buf", "get", "slice", "copy", "toString", "m", "exports", "module", "buf", "exports", "buffer", "length", "last", "alloc", "buf", "Type", "module", "name", "exports", "module", "exports", "module", "create", "buf", "encode", "decode", "identity_exports", "identity", "code", "name", "encode", "init_identity", "textEncoder", "textDecoder", "init_identity", "identity_exports", "buf", "name", "encode", "decode", "buf", "string", "fromString", "string", "base", "exports", "module", "last", "exports", "module", "Bucket", "map", "reduce", "acc", "exports", "module", "length", "concat", "length", "exports", "module", "hashFn", "buffer", "require_src", "exports", "module", "Bucket", "createHAMT", "exports", "module", "exports", "module", "blobToIt", "exports", "module", "exports", "module", "map", "exports", "module", "drain", "exports", "module", "filter", "exports", "module", "take", "throttledQueue", "resolve", "module", "exports", "resolve", "resolve", "import_varint", "name", "isBuffer", "buf", "toString", "fromString", "string", "length", "isBuffer", "string", "length", "buf", "buf", "encodedSize", "buf", "encodedSize", "compareTokens", "length", "buf", "fromString", "encodedSize", "compareTokens", "toToken", "length", "toString", "toToken", "length", "buf", "encodedSize", "toToken", "length", "buf", "encodedSize", "buf", "encodedSize", "buf", "encodedSize", "ui8a", "length", "buf", "encode", "decode", "encode", "decode", "varint", "length", "decode", "bytes", "multihash", "version", "read", "version", "version", "version", "import_varint", "encode", "varint", "create", "resolve", "drainer", "create", "import_it_parallel_batch", "mergeOptions", "from", "mur", "buf", "$protobuf", "Data", "encode", "decode", "UnixTime", "Metadata", "errcode", "code", "decode", "encode", "textDecoder", "links", "textEncoder", "size", "base", "textEncoder", "links", "name", "code", "encode", "decode", "buffer", "buffer", "encode", "import_err_code", "reduce", "all", "reduce", "batch", "import_it_batch", "reduce", "batch", "buffer", "encode", "bufferImporter", "parallelBatch", "buffer", "encode", "links", "code", "dagBuilder", "errCode", "import_err_code", "import_err_code", "errcode", "BufferList", "buf", "import_BufferList", "BufferList", "buffer", "import_err_code", "errCode", "fromString", "errCode", "name", "dir_default", "dir_default", "name", "links", "buffer", "encode", "dir_default", "name", "links", "dir", "size", "buffer", "encode", "tree", "last", "dir_default", "dagBuilder", "treeBuilder", "parallelBatch", "import_err_code", "import_it_all", "blobToIt", "browserStreamToIt", "itPeekable", "all", "map", "errCode", "fromString", "import_err_code", "import_browser_readablestream_to_it", "import_it_peekable", "normaliseContent", "errCode", "browserStreamToIt", "itPeekable", "import_err_code", "import_browser_readablestream_to_it", "import_it_peekable", "import_it_map", "normaliseContent", "errCode", "browserStreamToIt", "itPeekable", "map", "value", "toFileObject", "normaliseInput", "isBytes", "isBlob", "normaliseInput", "import_err_code", "errCode", "import_it_all", "all", "drain", "filter", "it", "take", "last", "pipe", "import_browser_readablestream_to_it", "import_err_code", "import_err_code", "init_identity", "import_err_code", "import_hamt_sharding", "buf", "links", "name", "link", "decode", "import_err_code", "length", "errCode", "import_err_code", "buf", "errCode", "code", "decode", "resolve", "length", "file_default", "resolve", "length", "links", "resolve", "links", "name", "decode", "name", "link", "file_default", "resolve", "decode", "errCode", "import_err_code", "length", "name", "resolve", "errCode", "import_err_code", "resolve", "name", "decode", "errCode", "import_err_code", "rawContent", "length", "resolve", "name", "errCode", "buf", "decode", "code", "identity", "resolve", "name", "errCode", "import_it_last", "toPathComponents", "errCode", "name", "last", "node", "options", "equals", "equals", "toIterable", "readonly", "base", "esm_exports", "code", "decode", "encode", "name", "CID_CBOR_TAG", "cidEncoder", "undefinedEncoder", "numberEncoder", "encodeOptions", "cidDecoder", "decodeOptions", "name", "code", "encode", "decode", "esm_exports", "cid", "buffer", "Response", "Blob", "throttledQueue", "fetch", "name", "car", "Blob", "pRetry", "res", "before", "size"]
}
