{"ast":null,"code":"import { Web3Storage } from 'web3.storage';\nimport { CONFIG } from '../config.js';\nimport { sha256, sha224 } from 'js-sha256';\nfunction getAccessToken() {\n  // If you're just testing, you can paste in a token\n  // and uncomment the following line:\n  // return 'paste-your-token-here'\n\n  // In a real app, it's better to read an access token from an\n  // environement variable or other configuration that's kept outside of\n  // your code base. For this to work, you need to set the\n  // WEB3STORAGE_TOKEN environment variable before you run your code.\n  return CONFIG.TEMPLATE.web3storage_api_key;\n}\nfunction makeStorageClient() {\n  return new Web3Storage({\n    token: getAccessToken()\n  });\n}\nexport default async function storeContent() {\n  const content = {\n    \"0\": {\n      \"DaoName\": \"APECOIN\",\n      \"chainId\": \"1\",\n      \"address\": \"0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5\",\n      \"giniCoefficient\": 0.87,\n      \"tokenHolders\": {\n        \"2020-01-10\": 20,\n        \"2020-01-11\": 20\n      }\n    },\n    \"1\": {\n      \"daoName\": \"SANDBOX\",\n      \"chainId\": \"1\",\n      \"address\": \"0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5\",\n      \"giniCoefficient\": 0.87,\n      \"tokenHolders\": {\n        \"2020-01-10\": 20,\n        \"2020-01-10\": 20\n      }\n    }\n  };\n  const storage = new Web3Storage({\n    token: getAccessToken()\n  });\n  const finalContent = JSON.stringify(content);\n  const file = new File([finalContent], await sha256(finalContent), {\n    type: 'text/plain'\n  });\n  const cid = await storage.put([file]);\n  console.log(`IPFS CID: ${cid}`);\n  console.log(`Gateway URL: https://dweb.link/ipfs/${cid}`);\n  return cid;\n}","map":{"version":3,"names":["Web3Storage","CONFIG","sha256","sha224","getAccessToken","TEMPLATE","web3storage_api_key","makeStorageClient","token","storeContent","content","storage","finalContent","JSON","stringify","file","File","type","cid","put","console","log"],"sources":["/Users/yuchenpeng/dao_terminal_v0/src/utils/storeIPFS.js"],"sourcesContent":["import { Web3Storage } from 'web3.storage'\nimport {CONFIG} from '../config.js'\nimport { sha256, sha224 } from 'js-sha256';\n\nfunction getAccessToken () {\n  // If you're just testing, you can paste in a token\n  // and uncomment the following line:\n  // return 'paste-your-token-here'\n\n  // In a real app, it's better to read an access token from an\n  // environement variable or other configuration that's kept outside of\n  // your code base. For this to work, you need to set the\n  // WEB3STORAGE_TOKEN environment variable before you run your code.\n  return CONFIG.TEMPLATE.web3storage_api_key\n}\n\nfunction makeStorageClient () {\n  return new Web3Storage({ token: getAccessToken() })\n}\n\nexport default async function storeContent (){\n    const content = {\n        \"0\":{\"DaoName\": \"APECOIN\",\n        \"chainId\": \"1\",\n        \"address\": \"0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5\",\n        \"giniCoefficient\": 0.87,\n        \"tokenHolders\": \n            { \"2020-01-10\":20, \n              \"2020-01-11\":20\n            },\n        },\n    \n        \"1\":\n        {\"daoName\": \"SANDBOX\",\n        \"chainId\": \"1\",\n        \"address\": \"0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5\",\n        \"giniCoefficient\": 0.87,\n        \"tokenHolders\": \n            { \"2020-01-10\":20, \n              \"2020-01-10\":20\n            },\n        }\n    }\n\n  const storage = new Web3Storage({ token: getAccessToken()});\n  const finalContent = JSON.stringify(content);\n  const file = new File([finalContent], await sha256(finalContent), {\n      type: 'text/plain',\n    }); \n  const cid = await storage.put([file]);\n  console.log(`IPFS CID: ${cid}`)\n  console.log(`Gateway URL: https://dweb.link/ipfs/${cid}`)\n\n  return cid;\n\n  }"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAAQC,MAAM,QAAO,cAAc;AACnC,SAASC,MAAM,EAAEC,MAAM,QAAQ,WAAW;AAE1C,SAASC,cAAc,GAAI;EACzB;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,OAAOH,MAAM,CAACI,QAAQ,CAACC,mBAAmB;AAC5C;AAEA,SAASC,iBAAiB,GAAI;EAC5B,OAAO,IAAIP,WAAW,CAAC;IAAEQ,KAAK,EAAEJ,cAAc;EAAG,CAAC,CAAC;AACrD;AAEA,eAAe,eAAeK,YAAY,GAAG;EACzC,MAAMC,OAAO,GAAG;IACZ,GAAG,EAAC;MAAC,SAAS,EAAE,SAAS;MACzB,SAAS,EAAE,GAAG;MACd,SAAS,EAAE,4CAA4C;MACvD,iBAAiB,EAAE,IAAI;MACvB,cAAc,EACV;QAAE,YAAY,EAAC,EAAE;QACf,YAAY,EAAC;MACf;IACJ,CAAC;IAED,GAAG,EACH;MAAC,SAAS,EAAE,SAAS;MACrB,SAAS,EAAE,GAAG;MACd,SAAS,EAAE,4CAA4C;MACvD,iBAAiB,EAAE,IAAI;MACvB,cAAc,EACV;QAAE,YAAY,EAAC,EAAE;QACf,YAAY,EAAC;MACf;IACJ;EACJ,CAAC;EAEH,MAAMC,OAAO,GAAG,IAAIX,WAAW,CAAC;IAAEQ,KAAK,EAAEJ,cAAc;EAAE,CAAC,CAAC;EAC3D,MAAMQ,YAAY,GAAGC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;EAC5C,MAAMK,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,YAAY,CAAC,EAAE,MAAMV,MAAM,CAACU,YAAY,CAAC,EAAE;IAC9DK,IAAI,EAAE;EACR,CAAC,CAAC;EACJ,MAAMC,GAAG,GAAG,MAAMP,OAAO,CAACQ,GAAG,CAAC,CAACJ,IAAI,CAAC,CAAC;EACrCK,OAAO,CAACC,GAAG,CAAE,aAAYH,GAAI,EAAC,CAAC;EAC/BE,OAAO,CAACC,GAAG,CAAE,uCAAsCH,GAAI,EAAC,CAAC;EAEzD,OAAOA,GAAG;AAEV"},"metadata":{},"sourceType":"module"}