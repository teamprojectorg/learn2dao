{"ast":null,"code":"import { Web3Storage } from 'web3.storage';\nimport { CONFIG } from '../config.js';\nimport { sha256, sha224 } from 'js-sha256';\nfunction getAccessToken() {\n  // If you're just testing, you can paste in a token\n  // and uncomment the following line:\n  // return 'paste-your-token-here'\n\n  // In a real app, it's better to read an access token from an\n  // environement variable or other configuration that's kept outside of\n  // your code base. For this to work, you need to set the\n  // WEB3STORAGE_TOKEN environment variable before you run your code.\n  return CONFIG.TEMPLATE.web3storage_api_key;\n}\nfunction makeStorageClient() {\n  return new Web3Storage({\n    token: getAccessToken()\n  });\n}\nexport default async function retrieveFiles(cid) {\n  const client = makeStorageClient();\n  console.log(cid);\n  const res = await client.get(cid);\n  console.log(`Got a response! [${res.status}] ${res.statusText}`);\n  if (!res.ok) {\n    throw new Error(`failed to get ${cid} - [${res.status}] ${res.statusText}`);\n  }\n\n  // unpack File objects from the response\n  const files = await res.files();\n  for (const file of files) {\n    console.log(`${file.cid} -- ${file.path} -- ${file.size}`);\n    console.log(file);\n    console.log(file.text);\n  }\n}","map":{"version":3,"names":["Web3Storage","CONFIG","sha256","sha224","getAccessToken","TEMPLATE","web3storage_api_key","makeStorageClient","token","retrieveFiles","cid","client","console","log","res","get","status","statusText","ok","Error","files","file","path","size","text"],"sources":["/Users/yuchenpeng/dao_terminal_v0/src/utils/retrieveIPFS.js"],"sourcesContent":["import { Web3Storage } from 'web3.storage'\nimport {CONFIG} from '../config.js'\nimport { sha256, sha224 } from 'js-sha256';\n\nfunction getAccessToken () {\n  // If you're just testing, you can paste in a token\n  // and uncomment the following line:\n  // return 'paste-your-token-here'\n\n  // In a real app, it's better to read an access token from an\n  // environement variable or other configuration that's kept outside of\n  // your code base. For this to work, you need to set the\n  // WEB3STORAGE_TOKEN environment variable before you run your code.\n  return CONFIG.TEMPLATE.web3storage_api_key\n}\n\nfunction makeStorageClient () {\n  return new Web3Storage({ token: getAccessToken() })\n}\n\nexport default async function retrieveFiles (cid) {\nconst client = makeStorageClient()\nconsole.log(cid)\nconst res = await client.get(cid)\nconsole.log(`Got a response! [${res.status}] ${res.statusText}`)\nif (!res.ok) {\n    throw new Error(`failed to get ${cid} - [${res.status}] ${res.statusText}`)\n}\n\n// unpack File objects from the response\nconst files = await res.files()\nfor (const file of files) {\n    console.log(`${file.cid} -- ${file.path} -- ${file.size}`)\n    console.log(file)\n    console.log(file.text)\n}\n}\n\n\n\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAAQC,MAAM,QAAO,cAAc;AACnC,SAASC,MAAM,EAAEC,MAAM,QAAQ,WAAW;AAE1C,SAASC,cAAc,GAAI;EACzB;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,OAAOH,MAAM,CAACI,QAAQ,CAACC,mBAAmB;AAC5C;AAEA,SAASC,iBAAiB,GAAI;EAC5B,OAAO,IAAIP,WAAW,CAAC;IAAEQ,KAAK,EAAEJ,cAAc;EAAG,CAAC,CAAC;AACrD;AAEA,eAAe,eAAeK,aAAa,CAAEC,GAAG,EAAE;EAClD,MAAMC,MAAM,GAAGJ,iBAAiB,EAAE;EAClCK,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAChB,MAAMI,GAAG,GAAG,MAAMH,MAAM,CAACI,GAAG,CAACL,GAAG,CAAC;EACjCE,OAAO,CAACC,GAAG,CAAE,oBAAmBC,GAAG,CAACE,MAAO,KAAIF,GAAG,CAACG,UAAW,EAAC,CAAC;EAChE,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE;IACT,MAAM,IAAIC,KAAK,CAAE,iBAAgBT,GAAI,OAAMI,GAAG,CAACE,MAAO,KAAIF,GAAG,CAACG,UAAW,EAAC,CAAC;EAC/E;;EAEA;EACA,MAAMG,KAAK,GAAG,MAAMN,GAAG,CAACM,KAAK,EAAE;EAC/B,KAAK,MAAMC,IAAI,IAAID,KAAK,EAAE;IACtBR,OAAO,CAACC,GAAG,CAAE,GAAEQ,IAAI,CAACX,GAAI,OAAMW,IAAI,CAACC,IAAK,OAAMD,IAAI,CAACE,IAAK,EAAC,CAAC;IAC1DX,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;IACjBT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACG,IAAI,CAAC;EAC1B;AACA"},"metadata":{},"sourceType":"module"}