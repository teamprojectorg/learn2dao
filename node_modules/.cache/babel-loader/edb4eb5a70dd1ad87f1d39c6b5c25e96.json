{"ast":null,"code":"import { CONFIG } from '../../config.js';\nimport axios from 'axios';\nexport default async function getPortfolio(key, chainId, address) {\n  //Given chain_id and wallet address, return wallet value for the last 30 days at 24 hour timestamps.\n  // input: \n  // key: Covalent API key\n  // chainId: the Chain the DAO is hosted on (Ethereum, Solana, etc..)\n  // address: the smart contract address of the DAO \n\n  // output:\n  // total_portfolio_in_dollar: total Portfolio of the DAO in dollar\n\n  let api_call_portfolio = `https://api.covalenthq.com/v1/` + `${chainId}/address/${address}/portfolio_v2/?&key=${key}`;\n  let test = `https://api.covalenthq.com/v1/1/address/demo.eth/portfolio_v2/?key=ckey_af1d8bda66e340bd835f1855487`;\n  try {\n    console.log(\"Here is portfolio in $\");\n    const resp = await axios.get(test, {\n      auth: {\n        username: key\n      }\n    });\n    console.log(resp);\n    // Organize response data to insert into graph\n    //let date_to_blockheight = resp.data.data.items.map(i => ({x:i., y:i.floor_price_quote_7d})).reverse()\n\n    let tokens_balances = resp.data.data.items.map(i => ({\n      x: i.quote\n    }));\n    let total_portfolio_in_dollar = tokens_balances.reduce((partialSum, a) => partialSum + a, 0);\n    return total_portfolio_in_dollar;\n  } catch (error) {\n    console.log(\"fail to fetch portfolio\");\n  }\n}","map":{"version":3,"names":["CONFIG","axios","getPortfolio","key","chainId","address","api_call_portfolio","test","console","log","resp","get","auth","username","tokens_balances","data","items","map","i","x","quote","total_portfolio_in_dollar","reduce","partialSum","a","error"],"sources":["/Users/yuchenpeng/dao_terminal_v0/src/api/v1/getPortfolio.js"],"sourcesContent":["\n\n\nimport {CONFIG} from '../../config.js'\nimport axios from 'axios';\n\n\nexport default async function getPortfolio(key,chainId,address){\n    //Given chain_id and wallet address, return wallet value for the last 30 days at 24 hour timestamps.\n    // input: \n    // key: Covalent API key\n    // chainId: the Chain the DAO is hosted on (Ethereum, Solana, etc..)\n    // address: the smart contract address of the DAO \n  \n    // output:\n    // total_portfolio_in_dollar: total Portfolio of the DAO in dollar\n\n\n    let api_call_portfolio =`https://api.covalenthq.com/v1/` +\n    `${chainId}/address/${address}/portfolio_v2/?&key=${key}`\n\n    \n    let test= `https://api.covalenthq.com/v1/1/address/demo.eth/portfolio_v2/?key=ckey_af1d8bda66e340bd835f1855487`\n\n    try{\n        console.log(\"Here is portfolio in $\")\n        const resp = await axios.get(test, {auth: {username: key}})\n        console.log(resp)\n        // Organize response data to insert into graph\n        //let date_to_blockheight = resp.data.data.items.map(i => ({x:i., y:i.floor_price_quote_7d})).reverse()\n    \n        let tokens_balances = resp.data.data.items.map(i => ({x:i.quote}))\n        let total_portfolio_in_dollar= tokens_balances.reduce((partialSum, a) => partialSum + a, 0);\n       \n        return total_portfolio_in_dollar\n\n       }catch(error){\n          console.log(\"fail to fetch portfolio\")\n      }\n  }"],"mappings":"AAGA,SAAQA,MAAM,QAAO,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAGzB,eAAe,eAAeC,YAAY,CAACC,GAAG,EAACC,OAAO,EAACC,OAAO,EAAC;EAC3D;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA,IAAIC,kBAAkB,GAAG,gCAA+B,GACvD,GAAEF,OAAQ,YAAWC,OAAQ,uBAAsBF,GAAI,EAAC;EAGzD,IAAII,IAAI,GAAG,qGAAoG;EAE/G,IAAG;IACCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,MAAMC,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACJ,IAAI,EAAE;MAACK,IAAI,EAAE;QAACC,QAAQ,EAAEV;MAAG;IAAC,CAAC,CAAC;IAC3DK,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACjB;IACA;;IAEA,IAAII,eAAe,GAAGJ,IAAI,CAACK,IAAI,CAACA,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,CAAC,KAAK;MAACC,CAAC,EAACD,CAAC,CAACE;IAAK,CAAC,CAAC,CAAC;IAClE,IAAIC,yBAAyB,GAAEP,eAAe,CAACQ,MAAM,CAAC,CAACC,UAAU,EAAEC,CAAC,KAAKD,UAAU,GAAGC,CAAC,EAAE,CAAC,CAAC;IAE3F,OAAOH,yBAAyB;EAEjC,CAAC,QAAMI,KAAK,EAAC;IACVjB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAC1C;AACJ"},"metadata":{},"sourceType":"module"}