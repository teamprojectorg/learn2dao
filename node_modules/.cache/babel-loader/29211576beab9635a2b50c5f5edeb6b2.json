{"ast":null,"code":"import moment from 'moment';\nimport axios from 'axios';\nimport { CONFIG } from '../../config.js';\nconst chain_id = `1`;\nconst address = `0x4d224452801ACEd8B2F0aebE155379bb5D594381`;\nconst bitDAO_address = `0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5`;\nconst start_date = \"2021-01-01\";\nconst end_date = \"2021-10-10\";\nexport default async function getTokenHolders(chainId, address, startDate, endDate) {\n  const days_interval = 30;\n  let from = moment().subtract(days_interval, 'days').format('YYYY-MM-DD');\n  const currentDay = moment().format('YYYY-MM-DD');\n\n  // Steps to get tokenholders in the past 7 days \n  // 1. Get block heights  start_date and end_date 2022-10-01 and 2022-10-31\n  // 2. Take the tokenholders of the start_date block height and of the end_date blockholder\n  // 3 .plot the datas \n  // let api_call_tokenholder = `https://api.covalenthq.com/v1/${chain_id}/tokens/${address}/token_holders_changes/?quote-currency=USD&format=JSON&starting-block=1&ending-block=100&key=ckey_af1d8bda66e340bd835f1855487`\n  let api_call_blockheights = `https://api.covalenthq.com/v1/${chainId}/block_v2/${startDate}/${endDate}/?quote-currency=USD&format=JSON&key=ckey_af1d8bda66e340bd835f1855487`;\n  try {\n    const resp = await axios.get(api_call_blockheights, {\n      auth: {\n        username: CONFIG.TEMPLATE.api_key\n      }\n    });\n    console.log(resp);\n    // Organize response data to insert into graph\n    //let date_to_blockheight = resp.data.data.items.map(i => ({x:i., y:i.floor_price_quote_7d})).reverse()\n\n    let date_to_blockheight = resp.data.data.items.map(i => ({\n      x: i.signed_at,\n      y: i.height\n    }));\n    let start_date_block_height = date_to_blockheight[0];\n    let end_date_block;\n    console.log(date_to_blockheight);\n  } catch (error) {\n    console.log(\"fail to fetch token holders\");\n  }\n}","map":{"version":3,"names":["moment","axios","CONFIG","chain_id","address","bitDAO_address","start_date","end_date","getTokenHolders","chainId","startDate","endDate","days_interval","from","subtract","format","currentDay","api_call_blockheights","resp","get","auth","username","TEMPLATE","api_key","console","log","date_to_blockheight","data","items","map","i","x","signed_at","y","height","start_date_block_height","end_date_block","error"],"sources":["/Users/yuchenpeng/dao_terminal_v0/src/api/v1/getTokenHolders.js"],"sourcesContent":["\nimport moment from 'moment';\nimport axios from 'axios';\nimport {CONFIG} from '../../config.js'\n\nconst chain_id = `1`\nconst address = `0x4d224452801ACEd8B2F0aebE155379bb5D594381`\nconst bitDAO_address = `0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5`\nconst start_date = \"2021-01-01\"\nconst end_date = \"2021-10-10\"\n\n export default async function getTokenHolders(chainId, address, startDate, endDate ){\n    const days_interval = 30; \n    let from = moment().subtract(days_interval, 'days').format('YYYY-MM-DD')\n \n    const currentDay =moment().format('YYYY-MM-DD')\n\n    // Steps to get tokenholders in the past 7 days \n    // 1. Get block heights  start_date and end_date 2022-10-01 and 2022-10-31\n    // 2. Take the tokenholders of the start_date block height and of the end_date blockholder\n    // 3 .plot the datas \n    // let api_call_tokenholder = `https://api.covalenthq.com/v1/${chain_id}/tokens/${address}/token_holders_changes/?quote-currency=USD&format=JSON&starting-block=1&ending-block=100&key=ckey_af1d8bda66e340bd835f1855487`\n    let api_call_blockheights = `https://api.covalenthq.com/v1/${chainId}/block_v2/${startDate}/${endDate}/?quote-currency=USD&format=JSON&key=ckey_af1d8bda66e340bd835f1855487`\n\n\n    try{\n     const resp = await axios.get(api_call_blockheights, {auth: {username: CONFIG.TEMPLATE.api_key}})\n     console.log(resp)\n     // Organize response data to insert into graph\n     //let date_to_blockheight = resp.data.data.items.map(i => ({x:i., y:i.floor_price_quote_7d})).reverse()\n    \n     let date_to_blockheight = resp.data.data.items.map(i => ({x:i.signed_at, y:i.height}))\n     let start_date_block_height = date_to_blockheight[0]\n     let end_date_block\n     console.log(date_to_blockheight)\n \n    }catch(error){\n       console.log(\"fail to fetch token holders\")\n   }\n  }\n\n\n\n"],"mappings":"AACA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,iBAAiB;AAEtC,MAAMC,QAAQ,GAAI,GAAE;AACpB,MAAMC,OAAO,GAAI,4CAA2C;AAC5D,MAAMC,cAAc,GAAI,4CAA2C;AACnE,MAAMC,UAAU,GAAG,YAAY;AAC/B,MAAMC,QAAQ,GAAG,YAAY;AAE5B,eAAe,eAAeC,eAAe,CAACC,OAAO,EAAEL,OAAO,EAAEM,SAAS,EAAEC,OAAO,EAAE;EACjF,MAAMC,aAAa,GAAG,EAAE;EACxB,IAAIC,IAAI,GAAGb,MAAM,EAAE,CAACc,QAAQ,CAACF,aAAa,EAAE,MAAM,CAAC,CAACG,MAAM,CAAC,YAAY,CAAC;EAExE,MAAMC,UAAU,GAAEhB,MAAM,EAAE,CAACe,MAAM,CAAC,YAAY,CAAC;;EAE/C;EACA;EACA;EACA;EACA;EACA,IAAIE,qBAAqB,GAAI,iCAAgCR,OAAQ,aAAYC,SAAU,IAAGC,OAAQ,uEAAsE;EAG5K,IAAG;IACF,MAAMO,IAAI,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAACF,qBAAqB,EAAE;MAACG,IAAI,EAAE;QAACC,QAAQ,EAAEnB,MAAM,CAACoB,QAAQ,CAACC;MAAO;IAAC,CAAC,CAAC;IAChGC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACjB;IACA;;IAEA,IAAIQ,mBAAmB,GAAGR,IAAI,CAACS,IAAI,CAACA,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,CAAC,KAAK;MAACC,CAAC,EAACD,CAAC,CAACE,SAAS;MAAEC,CAAC,EAACH,CAAC,CAACI;IAAM,CAAC,CAAC,CAAC;IACtF,IAAIC,uBAAuB,GAAGT,mBAAmB,CAAC,CAAC,CAAC;IACpD,IAAIU,cAAc;IAClBZ,OAAO,CAACC,GAAG,CAACC,mBAAmB,CAAC;EAEjC,CAAC,QAAMW,KAAK,EAAC;IACVb,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC9C;AACD"},"metadata":{},"sourceType":"module"}